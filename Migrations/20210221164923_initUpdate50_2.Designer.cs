// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCMR_Api.Data;

namespace SCMR_Api.Migrations
{
    [DbContext(typeof(Data.DbContext))]
    [Migration("20210221164923_initUpdate50_2")]
    partial class initUpdate50_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DescriptiveScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnName");

                    b.Property<double>("FromNumber");

                    b.Property<string>("Name");

                    b.Property<double>("ToNumber");

                    b.HasKey("Id");

                    b.ToTable("DescriptiveScores");
                });

            modelBuilder.Entity("ILogSystem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("DeleteObjects");

                    b.Property<string>("Desc");

                    b.Property<string>("Event");

                    b.Property<string>("Ip");

                    b.Property<string>("LogSource");

                    b.Property<string>("Object");

                    b.Property<string>("OldObject");

                    b.Property<string>("ResponseData");

                    b.Property<string>("Table");

                    b.Property<string>("TableObjectIds");

                    b.Property<string>("Type");

                    b.Property<int>("agentId");

                    b.Property<string>("agentName");

                    b.Property<string>("agentType");

                    b.Property<string>("dateString");

                    b.HasKey("Id");

                    b.ToTable("ILogSystems");
                });

            modelBuilder.Entity("SCMR_Api.Model.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttrType");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("Desc");

                    b.Property<Guid>("GId");

                    b.Property<bool>("IsInClient");

                    b.Property<bool>("IsInSearch");

                    b.Property<bool>("IsInShowInfo");

                    b.Property<bool>("IsMeliCode");

                    b.Property<bool>("IsPhoneNumber");

                    b.Property<bool>("IsRequired");

                    b.Property<bool>("IsTemplate");

                    b.Property<bool>("IsUniq");

                    b.Property<int>("MaxFileSize");

                    b.Property<int>("Order");

                    b.Property<int>("OrderInInfo");

                    b.Property<string>("Placeholder");

                    b.Property<int?>("QuestionId");

                    b.Property<string>("RequiredErrorMessage");

                    b.Property<double>("Score");

                    b.Property<string>("Title");

                    b.Property<string>("UniqErrorMessage");

                    b.Property<int>("UnitId");

                    b.Property<string>("Values");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UnitId");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("SCMR_Api.Model.AttributeOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttributeId");

                    b.Property<bool>("IsTrue");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.ToTable("AttributeOptions");
                });

            modelBuilder.Entity("SCMR_Api.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveMessage");

                    b.Property<int>("AuthorizeState");

                    b.Property<string>("BtnTitle");

                    b.Property<bool>("CalculateNegativeScore");

                    b.Property<int?>("ClassId");

                    b.Property<int?>("CourseId");

                    b.Property<DateTime?>("DateExpire");

                    b.Property<DateTime?>("DatePublish");

                    b.Property<string>("DeActiveMessage");

                    b.Property<string>("Desc");

                    b.Property<int?>("EasyQuestionNumber");

                    b.Property<string>("EndMessage");

                    b.Property<int?>("ExamTypeId");

                    b.Property<int?>("GradeId");

                    b.Property<int?>("HardQuestionNumber");

                    b.Property<bool>("HaveEntringCard");

                    b.Property<bool>("HaveInfo");

                    b.Property<string>("HeaderPicUrl");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsArchived");

                    b.Property<bool>("IsBackStepAllowed");

                    b.Property<bool>("IsInfoShow");

                    b.Property<bool>("IsPined");

                    b.Property<bool>("IsStaticDataSaved");

                    b.Property<DateTime>("LastSavedStaticData");

                    b.Property<string>("License");

                    b.Property<int?>("ModerateQuestionNumber");

                    b.Property<int?>("ParentId");

                    b.Property<int>("PostType");

                    b.Property<bool>("RandomAttribute");

                    b.Property<bool>("RandomAttributeOption");

                    b.Property<int>("RegisterItemStepType");

                    b.Property<string>("RegisterPicUrl");

                    b.Property<int>("RoleAccess");

                    b.Property<string>("ShowInfoPicUrl");

                    b.Property<int>("ShowRow");

                    b.Property<bool>("ShowScoreAfterDone");

                    b.Property<string>("TeachersIdAccess");

                    b.Property<string>("Title");

                    b.Property<double>("TopScore");

                    b.Property<int>("Type");

                    b.Property<bool>("UseLimitedRandomQuestionNumber");

                    b.Property<int?>("VeryHardQuestionNumber");

                    b.Property<int?>("WorkbookId");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("GradeId");

                    b.HasIndex("ParentId");

                    b.HasIndex("WorkbookId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SCMR_Api.Model.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("FileStatus");

                    b.Property<string>("FileUrl");

                    b.Property<DateTime?>("ReciveDate");

                    b.Property<bool>("ReciveStatus");

                    b.Property<int>("ReciverId");

                    b.Property<DateTime>("SendDate");

                    b.Property<int>("SenderId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("ReciverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("SCMR_Api.Model.ChatRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Allow");

                    b.Property<int>("RoleFromId");

                    b.Property<int>("RoleToId");

                    b.HasKey("Id");

                    b.ToTable("ChatRoles");
                });

            modelBuilder.Entity("SCMR_Api.Model.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Cls.Autonumber")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capasity")
                        .HasColumnName("Cls.Capasity");

                    b.Property<int>("Code")
                        .HasColumnName("Cls.Id");

                    b.Property<int>("GradeId")
                        .HasColumnName("Grd.Id");

                    b.Property<string>("Name")
                        .HasColumnName("Cls.Name");

                    b.Property<int>("Order")
                        .HasColumnName("Cls.Order");

                    b.Property<string>("Section")
                        .HasColumnName("Cls.Section");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("SCMR_Api.Model.ClassBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId");

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("ExamId");

                    b.Property<string>("ExamName");

                    b.Property<int>("GradeId");

                    b.Property<int>("InsTituteId");

                    b.Property<int>("RegisterId");

                    b.Property<int>("RegisterType");

                    b.Property<int>("StudentId");

                    b.Property<int>("TeacherId");

                    b.Property<int>("Type");

                    b.Property<string>("Value");

                    b.Property<int>("YeareducationId");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("GradeId");

                    b.HasIndex("InsTituteId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("YeareducationId");

                    b.ToTable("ClassBooks");
                });

            modelBuilder.Entity("SCMR_Api.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Crs.Code")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseMix")
                        .HasColumnName("Crs.CourseMix");

                    b.Property<int>("GradeId")
                        .HasColumnName("Crs.GradeCode");

                    b.Property<string>("Name")
                        .HasColumnName("Crs.Name");

                    b.Property<int>("Order")
                        .HasColumnName("Crs.CourseOrder");

                    b.Property<int>("Order2")
                        .HasColumnName("Crs.CourseOrder2");

                    b.Property<int>("TeachTime")
                        .HasColumnName("Crs.TeachTime");

                    b.Property<int>("TeacherId")
                        .HasColumnName("Crs.TeacherCode");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("SCMR_Api.Model.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("edu.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("edu.Name");

                    b.HasKey("Id");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("SCMR_Api.Model.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Exm.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CancellReason");

                    b.Property<int?>("ClassId")
                        .HasColumnName("Ex.Class");

                    b.Property<int>("CourseId")
                        .HasColumnName("Ex.Course");

                    b.Property<DateTime>("Date")
                        .HasColumnName("Ex.Date");

                    b.Property<int?>("ExamTypeId")
                        .HasColumnName("Ex.ExamTyp");

                    b.Property<int>("GradeId")
                        .HasColumnName("Ex.Grade");

                    b.Property<bool>("IsCancelled");

                    b.Property<string>("Name")
                        .HasColumnName("Ex.name");

                    b.Property<int>("NumberQ")
                        .HasColumnName("Ex.AmauntQuestion");

                    b.Property<int?>("OnlineExamId");

                    b.Property<int>("Order")
                        .HasColumnName("Ex.Order");

                    b.Property<int?>("ParentId");

                    b.Property<bool>("Result")
                        .HasColumnName("Ex.Result");

                    b.Property<DateTime?>("ResultDate")
                        .HasColumnName("Ex.ResultDate");

                    b.Property<bool>("ShowAvgOfExam");

                    b.Property<string>("Source")
                        .HasColumnName("Ex.Source");

                    b.Property<int?>("TeacherId")
                        .HasColumnName("Ex.Teacher");

                    b.Property<int>("Time")
                        .HasColumnName("Ex.Time");

                    b.Property<double>("TopScore")
                        .HasColumnName("Ex.TopScore");

                    b.Property<int?>("WorkbookId");

                    b.Property<int?>("YeareducationId");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("GradeId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("WorkbookId");

                    b.HasIndex("YeareducationId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("SCMR_Api.Model.ExamScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Exsc.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlankAnswer")
                        .HasColumnName("Ex.BlankAnswer");

                    b.Property<int>("ExamId")
                        .HasColumnName("Exsc.Examid");

                    b.Property<int>("FalseAnswer")
                        .HasColumnName("Ex.WrongAnswer");

                    b.Property<int?>("OnlineExamItemId");

                    b.Property<double>("Score")
                        .HasColumnName("Ex.Score");

                    b.Property<int>("State");

                    b.Property<int>("StudentId")
                        .HasColumnName("Exsc.Studentid");

                    b.Property<int>("TrueAnswer")
                        .HasColumnName("Ex.CorrectAnswer");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("StudentId");

                    b.ToTable("ExamScores");
                });

            modelBuilder.Entity("SCMR_Api.Model.ExamType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Extyp.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnName("Extyp.Desc");

                    b.Property<string>("Name")
                        .HasColumnName("Extyp.Name");

                    b.HasKey("Id");

                    b.ToTable("ExamTypes");
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<int>("ContractTypeId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("FileUrl");

                    b.Property<int>("PartyContractId");

                    b.Property<string>("PartyContractName");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ContractTypeId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int>("Table");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("ContractTypes");
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PatmentType.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnName("PatmentType.Code");

                    b.Property<string>("Desc")
                        .HasColumnName("PatmentType.Desc");

                    b.Property<string>("Title")
                        .HasColumnName("PatmentType.Title");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.StdPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StdPayment.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bank")
                        .HasColumnName("StdPayment.Bank");

                    b.Property<int>("ContractId");

                    b.Property<string>("Hesab")
                        .HasColumnName("StdPayment.AccNum");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnName("StdPayment.PaymentTyp");

                    b.Property<decimal>("Price")
                        .HasColumnName("StdPayment.Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RefNum")
                        .HasColumnName("StdPayment.Ref");

                    b.Property<string>("Shobe")
                        .HasColumnName("StdPayment.BankSection");

                    b.Property<int>("StdClassMngId");

                    b.Property<int>("StudentId")
                        .HasColumnName("StdPayment.Student");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("StdClassMngId");

                    b.HasIndex("StudentId");

                    b.ToTable("StdPayments");
                });

            modelBuilder.Entity("SCMR_Api.Model.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Grd.Autonumber")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capasity")
                        .HasColumnName("Grd.Capasity");

                    b.Property<string>("Code")
                        .HasColumnName("Grd.Id");

                    b.Property<string>("Desc")
                        .HasColumnName("Grd.Desc");

                    b.Property<string>("InternalCode")
                        .HasColumnName("Grd.InternalCode");

                    b.Property<string>("Name")
                        .HasColumnName("Grd.Name");

                    b.Property<int>("Order")
                        .HasColumnName("Grd.Order");

                    b.Property<string>("OrgCode")
                        .HasColumnName("Grd.OrgCode");

                    b.Property<int>("TituteId")
                        .HasColumnName("Grd.insCode");

                    b.Property<int>("YeareducationId")
                        .HasColumnName("Grd.eduyearCode");

                    b.HasKey("Id");

                    b.HasIndex("TituteId");

                    b.HasIndex("YeareducationId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.Advertising", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("PicUrl");

                    b.Property<int>("Type");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Advertisings");
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.BestStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class");

                    b.Property<DateTime>("DateEnd");

                    b.Property<DateTime>("DateStart");

                    b.Property<string>("Desc");

                    b.Property<string>("FullName");

                    b.Property<string>("PicUrl");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("BestStudents");
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<bool>("HaveComformed");

                    b.Property<string>("Ip");

                    b.Property<int?>("ParentId");

                    b.Property<int>("PostId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.MainSlideShow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateExpire");

                    b.Property<DateTime>("DatePublish");

                    b.Property<string>("Desc");

                    b.Property<string>("Name");

                    b.Property<int>("Page");

                    b.Property<int>("PostId");

                    b.Property<bool>("ShowState");

                    b.Property<string>("Title");

                    b.Property<string>("imgUrl");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("MainSlideShows");
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("PicUrl");

                    b.Property<int?>("PictureGalleryId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("PictureGalleryId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.PictureGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Desc");

                    b.Property<int>("DisLike");

                    b.Property<int>("Like");

                    b.Property<string>("Name");

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.ToTable("PictureGalleries");
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime>("DateEdited");

                    b.Property<bool>("HaveComment");

                    b.Property<string>("HeaderPicUrl");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsHighLight");

                    b.Property<string>("Name");

                    b.Property<int>("Order");

                    b.Property<int>("RatingCount");

                    b.Property<string>("ShortContent");

                    b.Property<long>("SumRating");

                    b.Property<string>("Tags");

                    b.Property<string>("Title");

                    b.Property<int>("Type");

                    b.Property<string>("Url");

                    b.Property<int>("ViewCount");

                    b.Property<bool>("haveVideo");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateEnd");

                    b.Property<DateTime>("DateStart");

                    b.Property<string>("PicUrl");

                    b.Property<int>("PostId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("SCMR_Api.Model.InsTitute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ins.AutoNum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("ins.Address");

                    b.Property<string>("City")
                        .HasColumnName("ins.City");

                    b.Property<string>("Desc")
                        .HasColumnName("ins.Desc");

                    b.Property<string>("Email")
                        .HasColumnName("ins.Email");

                    b.Property<string>("Name")
                        .HasColumnName("ins.Name");

                    b.Property<int>("OrgCode")
                        .HasColumnName("ins.OrgCode");

                    b.Property<string>("OrgSection")
                        .HasColumnName("ins.OrgSection");

                    b.Property<int>("OrgSex")
                        .HasColumnName("ins.OrgSex");

                    b.Property<string>("PostCode")
                        .HasColumnName("ins.PostCode");

                    b.Property<string>("State")
                        .HasColumnName("ins.State");

                    b.Property<string>("Tell")
                        .HasColumnName("ins.Tell");

                    b.Property<int?>("TituteCode")
                        .HasColumnName("ins.Code");

                    b.HasKey("Id");

                    b.HasIndex("TituteCode");

                    b.ToTable("InsTitutes");
                });

            modelBuilder.Entity("SCMR_Api.Model.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ins.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("ins.Name");

                    b.HasKey("Id");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("SCMR_Api.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorizedFullName");

                    b.Property<int>("AuthorizedType");

                    b.Property<string>("AuthorizedUsername");

                    b.Property<int>("BlankCount");

                    b.Property<int>("CategoryId");

                    b.Property<DateTime?>("DateAdd");

                    b.Property<DateTime?>("DateEdit");

                    b.Property<int>("FalseCount");

                    b.Property<bool>("IsActive");

                    b.Property<string>("MeliCode");

                    b.Property<long>("RahCode");

                    b.Property<double>("Score");

                    b.Property<string>("Tags");

                    b.Property<string>("Title");

                    b.Property<int>("TrueCount");

                    b.Property<int?>("UnitId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UnitId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SCMR_Api.Model.ItemAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeFilePath");

                    b.Property<int>("AttributeId");

                    b.Property<string>("AttrubuteValue");

                    b.Property<int>("ItemId");

                    b.Property<double>("Score");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemAttributes");
                });

            modelBuilder.Entity("SCMR_Api.Model.Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Desc");

                    b.Property<int>("DownloadTime");

                    b.Property<string>("FileUrl");

                    b.Property<bool>("HaveExternalUrl");

                    b.Property<int>("Like");

                    b.Property<decimal>("Price");

                    b.Property<int>("ProductId");

                    b.Property<string>("Title");

                    b.Property<int>("Value");

                    b.Property<int>("ViewCount");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("SCMR_Api.Model.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Desc");

                    b.Property<string>("Event");

                    b.Property<string>("Ip");

                    b.Property<string>("LogSource");

                    b.Property<int>("agentId");

                    b.Property<string>("agentName");

                    b.Property<string>("agnetType");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SCMR_Api.Model.MobileChat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileUrl");

                    b.Property<bool>("IsRead");

                    b.Property<DateTime?>("ReciveDate");

                    b.Property<int>("ReciverId");

                    b.Property<string>("ReciverName");

                    b.Property<int>("ReciverType");

                    b.Property<DateTime>("SendDate");

                    b.Property<int>("SenderId");

                    b.Property<string>("SenderName");

                    b.Property<int>("SenderType");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("MobileChats");
                });

            modelBuilder.Entity("SCMR_Api.Model.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ButtonTitle");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("IsShow");

                    b.Property<int>("NotiifcationType");

                    b.Property<DateTime>("SendDate");

                    b.Property<string>("ShortContent");

                    b.Property<int>("ShowType");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SCMR_Api.Model.NotificationAgent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Auth");

                    b.Property<string>("Endpoint");

                    b.Property<bool>("IsParent");

                    b.Property<string>("P256DH");

                    b.Property<int>("StudentId");

                    b.Property<DateTime>("SubscribeDate");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("NotificationAgents");
                });

            modelBuilder.Entity("SCMR_Api.Model.NotificationSeen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AgentId");

                    b.Property<string>("AgentName");

                    b.Property<int>("AgentType");

                    b.Property<int>("ClassId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("GradeId");

                    b.Property<int>("NotificationId");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationSeens");
                });

            modelBuilder.Entity("SCMR_Api.Model.OnlineClass", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowedAdminIds");

                    b.Property<string>("AllowedStudentIds");

                    b.Property<int>("AuthorizeType");

                    b.Property<int?>("ClassId");

                    b.Property<int?>("CourseId");

                    b.Property<int?>("GradeId");

                    b.Property<int?>("OnlineClassServerId");

                    b.Property<bool>("allowModsToUnmuteUsers");

                    b.Property<bool>("allowStartStopRecording");

                    b.Property<string>("attendeePW");

                    b.Property<bool>("autoStartRecording");

                    b.Property<string>("copyright");

                    b.Property<int>("duration");

                    b.Property<bool>("freeJoin");

                    b.Property<bool>("isBreakout");

                    b.Property<bool>("lockSettingsDisableCam");

                    b.Property<bool>("lockSettingsDisableMic");

                    b.Property<bool>("lockSettingsDisableNote");

                    b.Property<bool>("lockSettingsDisablePrivateChat");

                    b.Property<bool>("lockSettingsDisablePublicChat");

                    b.Property<bool>("lockSettingsLockOnJoin");

                    b.Property<bool>("lockSettingsLockedLayout");

                    b.Property<string>("logoutURL");

                    b.Property<string>("maxParticipants");

                    b.Property<string>("meetingId");

                    b.Property<string>("meta");

                    b.Property<string>("moderatorPW");

                    b.Property<bool>("muteOnStart");

                    b.Property<string>("name");

                    b.Property<string>("parentMeetingID");

                    b.Property<bool>("record");

                    b.Property<int>("sequence");

                    b.Property<bool>("webcamsOnlyForModerator");

                    b.Property<string>("welcome");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("GradeId");

                    b.HasIndex("OnlineClassServerId");

                    b.ToTable("OnlineClasses");
                });

            modelBuilder.Entity("SCMR_Api.Model.OnlineClassLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgentType");

                    b.Property<DateTime>("Date");

                    b.Property<string>("FullName");

                    b.Property<string>("IP");

                    b.Property<long>("OnlineClassId");

                    b.Property<int>("UserId");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("OnlineClassId");

                    b.ToTable("OnlineClassLogins");
                });

            modelBuilder.Entity("SCMR_Api.Model.OnlineClassServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("PrivateKey");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("OnlineClassServers");
                });

            modelBuilder.Entity("SCMR_Api.Model.OrgChart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Org.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnName("Org.Code");

                    b.Property<string>("Desc")
                        .HasColumnName("Org.Desc");

                    b.Property<string>("Name")
                        .HasColumnName("Org.Name");

                    b.Property<int>("Order")
                        .HasColumnName("Org.Order");

                    b.Property<int?>("ParentId")
                        .HasColumnName("Org.ParentCode");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("OrgCharts");
                });

            modelBuilder.Entity("SCMR_Api.Model.OrgPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Orgprs.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("Orgprs.Address");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("Orgprs.BirthDate");

                    b.Property<int>("Child")
                        .HasColumnName("Orgprs.Child");

                    b.Property<int>("Code")
                        .HasColumnName("Orgprs.Code");

                    b.Property<int>("EducationId")
                        .HasColumnName("Orgprs.edu");

                    b.Property<string>("Email")
                        .HasColumnName("Orgprs.Email");

                    b.Property<string>("FatherName")
                        .HasColumnName("Orgprs.FatherName");

                    b.Property<string>("IdNum")
                        .HasColumnName("Orgprs.idnum");

                    b.Property<string>("IdNumber")
                        .HasColumnName("Orgprs.idnumber");

                    b.Property<string>("IdSerial")
                        .HasColumnName("Orgprs.idserial");

                    b.Property<string>("InsuranceCode")
                        .HasColumnName("Orgprs.insuranceId");

                    b.Property<int>("InsuranceId")
                        .HasColumnName("Orgprs.insuranceTyp");

                    b.Property<string>("LastName")
                        .HasColumnName("Orgprs.LastName");

                    b.Property<bool>("Marrage")
                        .HasColumnName("Orgprs.Marrage");

                    b.Property<string>("Name")
                        .HasColumnName("Orgprs.Name");

                    b.Property<int>("OrgChartId")
                        .HasColumnName("Orgprs.ChartCode");

                    b.Property<string>("Phone")
                        .HasColumnName("Orgprs.Phone");

                    b.Property<int>("SalaryId")
                        .HasColumnName("Orgprs.Salary");

                    b.Property<string>("Tell")
                        .HasColumnName("Orgprs.Tell");

                    b.Property<string>("Type")
                        .HasColumnName("Orgprs.Type");

                    b.Property<string>("TypeYear")
                        .HasColumnName("Orgprs.TypeYear");

                    b.Property<int>("sex")
                        .HasColumnName("Orgprs.sex");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("OrgChartId");

                    b.HasIndex("SalaryId");

                    b.ToTable("OrgPeople");
                });

            modelBuilder.Entity("SCMR_Api.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc");

                    b.Property<bool>("HaveComment");

                    b.Property<int>("Like");

                    b.Property<string>("PicUrl");

                    b.Property<int>("ProductCategoryId");

                    b.Property<string>("Tags");

                    b.Property<string>("Title");

                    b.Property<decimal>("TotalPrice");

                    b.Property<int>("TotalType");

                    b.Property<int>("Type");

                    b.Property<int>("Value");

                    b.Property<int>("WriterId");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("WriterId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SCMR_Api.Model.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("SCMR_Api.Model.ProductComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Email");

                    b.Property<string>("FullName");

                    b.Property<bool>("HaveComformed");

                    b.Property<string>("Ip");

                    b.Property<int?>("ParentId");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductComments");
                });

            modelBuilder.Entity("SCMR_Api.Model.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Que.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnName("Que.Answer");

                    b.Property<string>("ComplatabelContent");

                    b.Property<int>("CourseId")
                        .HasColumnName("Que.Courseid");

                    b.Property<int>("Defact")
                        .HasColumnName("Que.Defact");

                    b.Property<string>("Desc1")
                        .HasColumnName("Que.Description");

                    b.Property<string>("Desc2")
                        .HasColumnName("Que.Desc");

                    b.Property<int>("GradeId")
                        .HasColumnName("Que.Gradeid");

                    b.Property<double>("Mark")
                        .HasColumnName("Que.Mark");

                    b.Property<string>("Name")
                        .HasColumnName("Que.Name");

                    b.Property<string>("Person")
                        .HasColumnName("Que.SourceCreation");

                    b.Property<string>("Source")
                        .HasColumnName("Que.Source");

                    b.Property<string>("Title")
                        .HasColumnName("Que.Question");

                    b.Property<int>("Type")
                        .HasColumnName("Que.Typ");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GradeId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("SCMR_Api.Model.QuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QueOp.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsTrue")
                        .HasColumnName("QueOp.isAnswer");

                    b.Property<string>("Name")
                        .HasColumnName("QueOp.name");

                    b.Property<int>("QuestionId")
                        .HasColumnName("QueOp.Questionid");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptions");
                });

            modelBuilder.Entity("SCMR_Api.Model.RegisterItemLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryAuthorizeState");

                    b.Property<int>("CategoryId");

                    b.Property<int>("ClassId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("FullName");

                    b.Property<int>("GradeId");

                    b.Property<string>("IP");

                    b.Property<string>("Password");

                    b.Property<string>("UserType");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("RegisterItemLogins");
                });

            modelBuilder.Entity("SCMR_Api.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Add_Advertising");

                    b.Property<bool>("Add_Attribute");

                    b.Property<bool>("Add_BestStudent");

                    b.Property<bool>("Add_Category");

                    b.Property<bool>("Add_Class");

                    b.Property<bool>("Add_ClassBook");

                    b.Property<bool>("Add_Comment");

                    b.Property<bool>("Add_Contract");

                    b.Property<bool>("Add_ContractType");

                    b.Property<bool>("Add_Course");

                    b.Property<bool>("Add_DescriptiveScore");

                    b.Property<bool>("Add_Education");

                    b.Property<bool>("Add_Exam");

                    b.Property<bool>("Add_ExamScore");

                    b.Property<bool>("Add_ExamType");

                    b.Property<bool>("Add_Grade");

                    b.Property<bool>("Add_InsTitute");

                    b.Property<bool>("Add_Insurance");

                    b.Property<bool>("Add_Item");

                    b.Property<bool>("Add_Link");

                    b.Property<bool>("Add_MainSlideShow");

                    b.Property<bool>("Add_Notification");

                    b.Property<bool>("Add_OnlineClass");

                    b.Property<bool>("Add_OnlineClassServer");

                    b.Property<bool>("Add_OnlineExam");

                    b.Property<bool>("Add_OnlineExamOption");

                    b.Property<bool>("Add_OnlineExamResult");

                    b.Property<bool>("Add_OrgChart");

                    b.Property<bool>("Add_OrgPerson");

                    b.Property<bool>("Add_PaymentType");

                    b.Property<bool>("Add_Picture");

                    b.Property<bool>("Add_PictureGallery");

                    b.Property<bool>("Add_Post");

                    b.Property<bool>("Add_Product");

                    b.Property<bool>("Add_ProductCategory");

                    b.Property<bool>("Add_Question");

                    b.Property<bool>("Add_QuestionOption");

                    b.Property<bool>("Add_Role");

                    b.Property<bool>("Add_Salary");

                    b.Property<bool>("Add_Schedule");

                    b.Property<bool>("Add_ScoreThemplate");

                    b.Property<bool>("Add_StdPayment");

                    b.Property<bool>("Add_Student");

                    b.Property<bool>("Add_StudentScore");

                    b.Property<bool>("Add_StudentType");

                    b.Property<bool>("Add_Teacher");

                    b.Property<bool>("Add_TimeSchedule");

                    b.Property<bool>("Add_TimeandDays");

                    b.Property<bool>("Add_Unit");

                    b.Property<bool>("Add_User");

                    b.Property<bool>("Add_VirtualTeaching");

                    b.Property<bool>("Add_Workbook");

                    b.Property<bool>("Add_Writer");

                    b.Property<bool>("Add_Yeareducation");

                    b.Property<bool>("Edit_Advertising");

                    b.Property<bool>("Edit_Attribute");

                    b.Property<bool>("Edit_BestStudent");

                    b.Property<bool>("Edit_Category");

                    b.Property<bool>("Edit_Class");

                    b.Property<bool>("Edit_ClassBook");

                    b.Property<bool>("Edit_Comment");

                    b.Property<bool>("Edit_Contract");

                    b.Property<bool>("Edit_ContractType");

                    b.Property<bool>("Edit_Course");

                    b.Property<bool>("Edit_DescriptiveScore");

                    b.Property<bool>("Edit_Education");

                    b.Property<bool>("Edit_Exam");

                    b.Property<bool>("Edit_ExamScore");

                    b.Property<bool>("Edit_ExamType");

                    b.Property<bool>("Edit_Grade");

                    b.Property<bool>("Edit_InsTitute");

                    b.Property<bool>("Edit_Insurance");

                    b.Property<bool>("Edit_Item");

                    b.Property<bool>("Edit_Link");

                    b.Property<bool>("Edit_MainSlideShow");

                    b.Property<bool>("Edit_Notification");

                    b.Property<bool>("Edit_OnlineClass");

                    b.Property<bool>("Edit_OnlineClassServer");

                    b.Property<bool>("Edit_OnlineExam");

                    b.Property<bool>("Edit_OnlineExamOption");

                    b.Property<bool>("Edit_OnlineExamResult");

                    b.Property<bool>("Edit_OrgChart");

                    b.Property<bool>("Edit_OrgPerson");

                    b.Property<bool>("Edit_PaymentType");

                    b.Property<bool>("Edit_Picture");

                    b.Property<bool>("Edit_PictureGallery");

                    b.Property<bool>("Edit_Post");

                    b.Property<bool>("Edit_Product");

                    b.Property<bool>("Edit_ProductCategory");

                    b.Property<bool>("Edit_Question");

                    b.Property<bool>("Edit_QuestionOption");

                    b.Property<bool>("Edit_Role");

                    b.Property<bool>("Edit_Salary");

                    b.Property<bool>("Edit_Schedule");

                    b.Property<bool>("Edit_ScoreThemplate");

                    b.Property<bool>("Edit_StdPayment");

                    b.Property<bool>("Edit_Student");

                    b.Property<bool>("Edit_StudentParentPassword");

                    b.Property<bool>("Edit_StudentPassword");

                    b.Property<bool>("Edit_StudentScore");

                    b.Property<bool>("Edit_StudentType");

                    b.Property<bool>("Edit_Teacher");

                    b.Property<bool>("Edit_TeacherAllAccess");

                    b.Property<bool>("Edit_TeacherPassword");

                    b.Property<bool>("Edit_TimeSchedule");

                    b.Property<bool>("Edit_TimeandDays");

                    b.Property<bool>("Edit_Unit");

                    b.Property<bool>("Edit_User");

                    b.Property<bool>("Edit_VirtualTeaching");

                    b.Property<bool>("Edit_Workbook");

                    b.Property<bool>("Edit_Writer");

                    b.Property<bool>("Edit_Yeareducation");

                    b.Property<string>("Name");

                    b.Property<bool>("Remove_Advertising");

                    b.Property<bool>("Remove_Attribute");

                    b.Property<bool>("Remove_BestStudent");

                    b.Property<bool>("Remove_Category");

                    b.Property<bool>("Remove_Class");

                    b.Property<bool>("Remove_ClassBook");

                    b.Property<bool>("Remove_Comment");

                    b.Property<bool>("Remove_Contract");

                    b.Property<bool>("Remove_ContractType");

                    b.Property<bool>("Remove_Course");

                    b.Property<bool>("Remove_DescriptiveScore");

                    b.Property<bool>("Remove_Education");

                    b.Property<bool>("Remove_Exam");

                    b.Property<bool>("Remove_ExamScore");

                    b.Property<bool>("Remove_ExamType");

                    b.Property<bool>("Remove_Grade");

                    b.Property<bool>("Remove_InsTitute");

                    b.Property<bool>("Remove_Insurance");

                    b.Property<bool>("Remove_Item");

                    b.Property<bool>("Remove_Link");

                    b.Property<bool>("Remove_MainSlideShow");

                    b.Property<bool>("Remove_Notification");

                    b.Property<bool>("Remove_OnlineClass");

                    b.Property<bool>("Remove_OnlineClassServer");

                    b.Property<bool>("Remove_OnlineExam");

                    b.Property<bool>("Remove_OnlineExamOption");

                    b.Property<bool>("Remove_OnlineExamResult");

                    b.Property<bool>("Remove_OrgChart");

                    b.Property<bool>("Remove_OrgPerson");

                    b.Property<bool>("Remove_PaymentType");

                    b.Property<bool>("Remove_Picture");

                    b.Property<bool>("Remove_PictureGallery");

                    b.Property<bool>("Remove_Post");

                    b.Property<bool>("Remove_Product");

                    b.Property<bool>("Remove_ProductCategory");

                    b.Property<bool>("Remove_Question");

                    b.Property<bool>("Remove_QuestionOption");

                    b.Property<bool>("Remove_Role");

                    b.Property<bool>("Remove_Salary");

                    b.Property<bool>("Remove_Schedule");

                    b.Property<bool>("Remove_ScoreThemplate");

                    b.Property<bool>("Remove_StdPayment");

                    b.Property<bool>("Remove_Student");

                    b.Property<bool>("Remove_StudentScore");

                    b.Property<bool>("Remove_StudentType");

                    b.Property<bool>("Remove_Teacher");

                    b.Property<bool>("Remove_TimeSchedule");

                    b.Property<bool>("Remove_TimeandDays");

                    b.Property<bool>("Remove_Unit");

                    b.Property<bool>("Remove_User");

                    b.Property<bool>("Remove_VirtualTeaching");

                    b.Property<bool>("Remove_Workbook");

                    b.Property<bool>("Remove_Writer");

                    b.Property<bool>("Remove_Yeareducation");

                    b.Property<bool>("Validation_User");

                    b.Property<bool>("View_Advertising");

                    b.Property<bool>("View_Attribute");

                    b.Property<bool>("View_BestStudent");

                    b.Property<bool>("View_Category");

                    b.Property<bool>("View_Class");

                    b.Property<bool>("View_ClassBook");

                    b.Property<bool>("View_Comment");

                    b.Property<bool>("View_Contract");

                    b.Property<bool>("View_ContractType");

                    b.Property<bool>("View_Course");

                    b.Property<bool>("View_DescriptiveScore");

                    b.Property<bool>("View_Education");

                    b.Property<bool>("View_Exam");

                    b.Property<bool>("View_ExamAnalize");

                    b.Property<bool>("View_ExamScore");

                    b.Property<bool>("View_ExamType");

                    b.Property<bool>("View_Grade");

                    b.Property<bool>("View_InsTitute");

                    b.Property<bool>("View_Insurance");

                    b.Property<bool>("View_Item");

                    b.Property<bool>("View_Link");

                    b.Property<bool>("View_Log");

                    b.Property<bool>("View_MainSlideShow");

                    b.Property<bool>("View_Notification");

                    b.Property<bool>("View_OnlineClass");

                    b.Property<bool>("View_OnlineClassServer");

                    b.Property<bool>("View_OnlineExam");

                    b.Property<bool>("View_OnlineExamOption");

                    b.Property<bool>("View_OnlineExamResult");

                    b.Property<bool>("View_OrgChart");

                    b.Property<bool>("View_OrgPerson");

                    b.Property<bool>("View_PaymentType");

                    b.Property<bool>("View_Picture");

                    b.Property<bool>("View_PictureGallery");

                    b.Property<bool>("View_Post");

                    b.Property<bool>("View_Product");

                    b.Property<bool>("View_ProductCategory");

                    b.Property<bool>("View_Question");

                    b.Property<bool>("View_QuestionOption");

                    b.Property<bool>("View_Role");

                    b.Property<bool>("View_Salary");

                    b.Property<bool>("View_Schedule");

                    b.Property<bool>("View_ScoreThemplate");

                    b.Property<bool>("View_StdPayment");

                    b.Property<bool>("View_Student");

                    b.Property<bool>("View_StudentDailySchedule");

                    b.Property<bool>("View_StudentFinancialWidget");

                    b.Property<bool>("View_StudentScore");

                    b.Property<bool>("View_StudentStudyRecord");

                    b.Property<bool>("View_StudentType");

                    b.Property<bool>("View_StudentWorkbook");

                    b.Property<bool>("View_Teacher");

                    b.Property<bool>("View_TimeSchedule");

                    b.Property<bool>("View_TimeandDays");

                    b.Property<bool>("View_Unit");

                    b.Property<bool>("View_User");

                    b.Property<bool>("View_VirtualTeaching");

                    b.Property<bool>("View_Workbook");

                    b.Property<bool>("View_Writer");

                    b.Property<bool>("View_Yeareducation");

                    b.Property<bool>("post_amoozesh");

                    b.Property<bool>("post_dabirKhaneBargozidegan");

                    b.Property<bool>("post_daneshAmookhtegan");

                    b.Property<bool>("post_daneshAmoozan");

                    b.Property<bool>("post_darbareTaha");

                    b.Property<bool>("post_darkhastTajdidNazar");

                    b.Property<bool>("post_ehrazeHoviat");

                    b.Property<bool>("post_enteghadVaPishnahad");

                    b.Property<bool>("post_enzebati");

                    b.Property<bool>("post_fadak");

                    b.Property<bool>("post_faq");

                    b.Property<bool>("post_feed");

                    b.Property<bool>("post_forsatHayeShoghli");

                    b.Property<bool>("post_ghesmathayeSamane");

                    b.Property<bool>("post_hedayatTahsil");

                    b.Property<bool>("post_it");

                    b.Property<bool>("post_mali");

                    b.Property<bool>("post_mokatebat");

                    b.Property<bool>("post_moshaver");

                    b.Property<bool>("post_parvaresh");

                    b.Property<bool>("post_post");

                    b.Property<bool>("post_sabteNam");

                    b.Property<bool>("post_sharayetSabteNam");

                    b.Property<bool>("post_tamasBaTaha");

                    b.Property<bool>("post_voroodBeSystem");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Add_Advertising = false,
                            Add_Attribute = true,
                            Add_BestStudent = false,
                            Add_Category = true,
                            Add_Class = false,
                            Add_ClassBook = false,
                            Add_Comment = false,
                            Add_Contract = false,
                            Add_ContractType = false,
                            Add_Course = false,
                            Add_DescriptiveScore = false,
                            Add_Education = false,
                            Add_Exam = false,
                            Add_ExamScore = false,
                            Add_ExamType = false,
                            Add_Grade = false,
                            Add_InsTitute = false,
                            Add_Insurance = false,
                            Add_Item = true,
                            Add_Link = false,
                            Add_MainSlideShow = false,
                            Add_Notification = false,
                            Add_OnlineClass = false,
                            Add_OnlineClassServer = false,
                            Add_OnlineExam = false,
                            Add_OnlineExamOption = false,
                            Add_OnlineExamResult = false,
                            Add_OrgChart = false,
                            Add_OrgPerson = false,
                            Add_PaymentType = false,
                            Add_Picture = false,
                            Add_PictureGallery = false,
                            Add_Post = false,
                            Add_Product = false,
                            Add_ProductCategory = false,
                            Add_Question = false,
                            Add_QuestionOption = false,
                            Add_Role = true,
                            Add_Salary = false,
                            Add_Schedule = false,
                            Add_ScoreThemplate = false,
                            Add_StdPayment = false,
                            Add_Student = false,
                            Add_StudentScore = false,
                            Add_StudentType = false,
                            Add_Teacher = false,
                            Add_TimeSchedule = false,
                            Add_TimeandDays = false,
                            Add_Unit = true,
                            Add_User = true,
                            Add_VirtualTeaching = false,
                            Add_Workbook = false,
                            Add_Writer = false,
                            Add_Yeareducation = false,
                            Edit_Advertising = false,
                            Edit_Attribute = true,
                            Edit_BestStudent = false,
                            Edit_Category = true,
                            Edit_Class = false,
                            Edit_ClassBook = false,
                            Edit_Comment = false,
                            Edit_Contract = false,
                            Edit_ContractType = false,
                            Edit_Course = false,
                            Edit_DescriptiveScore = false,
                            Edit_Education = false,
                            Edit_Exam = false,
                            Edit_ExamScore = false,
                            Edit_ExamType = false,
                            Edit_Grade = false,
                            Edit_InsTitute = false,
                            Edit_Insurance = false,
                            Edit_Item = true,
                            Edit_Link = false,
                            Edit_MainSlideShow = false,
                            Edit_Notification = false,
                            Edit_OnlineClass = false,
                            Edit_OnlineClassServer = false,
                            Edit_OnlineExam = false,
                            Edit_OnlineExamOption = false,
                            Edit_OnlineExamResult = false,
                            Edit_OrgChart = false,
                            Edit_OrgPerson = false,
                            Edit_PaymentType = false,
                            Edit_Picture = false,
                            Edit_PictureGallery = false,
                            Edit_Post = false,
                            Edit_Product = false,
                            Edit_ProductCategory = false,
                            Edit_Question = false,
                            Edit_QuestionOption = false,
                            Edit_Role = true,
                            Edit_Salary = false,
                            Edit_Schedule = false,
                            Edit_ScoreThemplate = false,
                            Edit_StdPayment = false,
                            Edit_Student = false,
                            Edit_StudentParentPassword = false,
                            Edit_StudentPassword = false,
                            Edit_StudentScore = false,
                            Edit_StudentType = false,
                            Edit_Teacher = false,
                            Edit_TeacherAllAccess = false,
                            Edit_TeacherPassword = false,
                            Edit_TimeSchedule = false,
                            Edit_TimeandDays = false,
                            Edit_Unit = true,
                            Edit_User = true,
                            Edit_VirtualTeaching = false,
                            Edit_Workbook = false,
                            Edit_Writer = false,
                            Edit_Yeareducation = false,
                            Name = "مدیر سیستم",
                            Remove_Advertising = false,
                            Remove_Attribute = true,
                            Remove_BestStudent = false,
                            Remove_Category = true,
                            Remove_Class = false,
                            Remove_ClassBook = false,
                            Remove_Comment = false,
                            Remove_Contract = false,
                            Remove_ContractType = false,
                            Remove_Course = false,
                            Remove_DescriptiveScore = false,
                            Remove_Education = false,
                            Remove_Exam = false,
                            Remove_ExamScore = false,
                            Remove_ExamType = false,
                            Remove_Grade = false,
                            Remove_InsTitute = false,
                            Remove_Insurance = false,
                            Remove_Item = true,
                            Remove_Link = false,
                            Remove_MainSlideShow = false,
                            Remove_Notification = false,
                            Remove_OnlineClass = false,
                            Remove_OnlineClassServer = false,
                            Remove_OnlineExam = false,
                            Remove_OnlineExamOption = false,
                            Remove_OnlineExamResult = false,
                            Remove_OrgChart = false,
                            Remove_OrgPerson = false,
                            Remove_PaymentType = false,
                            Remove_Picture = false,
                            Remove_PictureGallery = false,
                            Remove_Post = false,
                            Remove_Product = false,
                            Remove_ProductCategory = false,
                            Remove_Question = false,
                            Remove_QuestionOption = false,
                            Remove_Role = true,
                            Remove_Salary = false,
                            Remove_Schedule = false,
                            Remove_ScoreThemplate = false,
                            Remove_StdPayment = false,
                            Remove_Student = false,
                            Remove_StudentScore = false,
                            Remove_StudentType = false,
                            Remove_Teacher = false,
                            Remove_TimeSchedule = false,
                            Remove_TimeandDays = false,
                            Remove_Unit = true,
                            Remove_User = true,
                            Remove_VirtualTeaching = false,
                            Remove_Workbook = false,
                            Remove_Writer = false,
                            Remove_Yeareducation = false,
                            Validation_User = true,
                            View_Advertising = false,
                            View_Attribute = true,
                            View_BestStudent = false,
                            View_Category = true,
                            View_Class = false,
                            View_ClassBook = false,
                            View_Comment = false,
                            View_Contract = false,
                            View_ContractType = false,
                            View_Course = false,
                            View_DescriptiveScore = false,
                            View_Education = false,
                            View_Exam = false,
                            View_ExamAnalize = false,
                            View_ExamScore = false,
                            View_ExamType = false,
                            View_Grade = false,
                            View_InsTitute = false,
                            View_Insurance = false,
                            View_Item = true,
                            View_Link = false,
                            View_Log = false,
                            View_MainSlideShow = false,
                            View_Notification = false,
                            View_OnlineClass = false,
                            View_OnlineClassServer = false,
                            View_OnlineExam = false,
                            View_OnlineExamOption = false,
                            View_OnlineExamResult = false,
                            View_OrgChart = false,
                            View_OrgPerson = false,
                            View_PaymentType = false,
                            View_Picture = false,
                            View_PictureGallery = false,
                            View_Post = false,
                            View_Product = false,
                            View_ProductCategory = false,
                            View_Question = false,
                            View_QuestionOption = false,
                            View_Role = true,
                            View_Salary = false,
                            View_Schedule = false,
                            View_ScoreThemplate = false,
                            View_StdPayment = false,
                            View_Student = false,
                            View_StudentDailySchedule = false,
                            View_StudentFinancialWidget = false,
                            View_StudentScore = false,
                            View_StudentStudyRecord = false,
                            View_StudentType = false,
                            View_StudentWorkbook = false,
                            View_Teacher = false,
                            View_TimeSchedule = false,
                            View_TimeandDays = false,
                            View_Unit = true,
                            View_User = true,
                            View_VirtualTeaching = false,
                            View_Workbook = false,
                            View_Writer = false,
                            View_Yeareducation = false,
                            post_amoozesh = false,
                            post_dabirKhaneBargozidegan = false,
                            post_daneshAmookhtegan = false,
                            post_daneshAmoozan = false,
                            post_darbareTaha = false,
                            post_darkhastTajdidNazar = false,
                            post_ehrazeHoviat = false,
                            post_enteghadVaPishnahad = false,
                            post_enzebati = false,
                            post_fadak = false,
                            post_faq = false,
                            post_feed = false,
                            post_forsatHayeShoghli = false,
                            post_ghesmathayeSamane = false,
                            post_hedayatTahsil = false,
                            post_it = false,
                            post_mali = false,
                            post_mokatebat = false,
                            post_moshaver = false,
                            post_parvaresh = false,
                            post_post = false,
                            post_sabteNam = false,
                            post_sharayetSabteNam = false,
                            post_tamasBaTaha = false,
                            post_voroodBeSystem = false
                        });
                });

            modelBuilder.Entity("SCMR_Api.Model.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sal.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("sal.Name");

                    b.HasKey("Id");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("SCMR_Api.Model.ScoreThemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Subject");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.ToTable("ScoreThemplates");
                });

            modelBuilder.Entity("SCMR_Api.Model.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "NowYeareducationId",
                            Value = "1"
                        });
                });

            modelBuilder.Entity("SCMR_Api.Model.StdClassMng", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StdClassMng.Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BehaveState")
                        .HasColumnName("Std.BehaveState");

                    b.Property<int>("ClassId")
                        .HasColumnName("Std.Classid");

                    b.Property<int>("GradeId")
                        .HasColumnName("Std.Gradeid");

                    b.Property<int>("InsTituteId")
                        .HasColumnName("Std.insid");

                    b.Property<bool>("IsActive");

                    b.Property<int>("PayrollState")
                        .HasColumnName("Std.PayrollState");

                    b.Property<int>("StudentId")
                        .HasColumnName("Std.Code");

                    b.Property<int?>("StudentTypeId");

                    b.Property<int>("StudyState")
                        .HasColumnName("Std.StudyState");

                    b.Property<int>("YeareducationId")
                        .HasColumnName("Std.YearId");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("GradeId");

                    b.HasIndex("InsTituteId");

                    b.HasIndex("StudentId");

                    b.HasIndex("StudentTypeId");

                    b.HasIndex("YeareducationId");

                    b.ToTable("StdClassMngs");
                });

            modelBuilder.Entity("SCMR_Api.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Std.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("Std.BirthDate");

                    b.Property<string>("BirthLocation")
                        .HasColumnName("Std.BirthLocation");

                    b.Property<int>("Code")
                        .HasColumnName("Std.Code");

                    b.Property<string>("FatherName")
                        .HasColumnName("Std.FatherName");

                    b.Property<string>("IdCardSerial")
                        .HasColumnName("Std.IdCardSerial");

                    b.Property<string>("IdNumber")
                        .HasColumnName("Std.IdNumber");

                    b.Property<string>("IdNumber2")
                        .HasColumnName("Std.IdNumber2");

                    b.Property<string>("LastName")
                        .HasColumnName("Std.LastName");

                    b.Property<string>("Name")
                        .HasColumnName("Std.Name");

                    b.Property<string>("OrgCode")
                        .HasColumnName("Std.OrgCode");

                    b.Property<bool>("ParentAccess");

                    b.Property<string>("ParentsPassword");

                    b.Property<string>("PicUrl")
                        .HasColumnName("Std.PictureUrl");

                    b.Property<bool>("StudentAccess");

                    b.Property<string>("StudentPassword");

                    b.Property<int>("StudentState")
                        .HasColumnName("Std.State");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SCMR_Api.Model.StudentDailySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConsultantComment");

                    b.Property<DateTime?>("ConsultantCommentDate");

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime>("DateExecute");

                    b.Property<string>("FromTime");

                    b.Property<int>("State");

                    b.Property<int>("StdClassMngId");

                    b.Property<string>("StudentParentComment");

                    b.Property<DateTime?>("StudentParentCommentDate");

                    b.Property<string>("ToTime");

                    b.Property<int>("Type");

                    b.Property<string>("Volume");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StdClassMngId");

                    b.ToTable("StudentDailySchedules");
                });

            modelBuilder.Entity("SCMR_Api.Model.StudentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Stdinfo.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnName("Stdinfo.Desc");

                    b.Property<string>("Email")
                        .HasColumnName("Stdinfo.Email");

                    b.Property<string>("FamilyState")
                        .HasColumnName("Stdinfo.FamilyState");

                    b.Property<string>("FatherEdu")
                        .HasColumnName("Stdinfo.FatherEdu");

                    b.Property<string>("FatherJob")
                        .HasColumnName("Stdinfo.FatherJob");

                    b.Property<string>("FatherJobAddress")
                        .HasColumnName("Stdinfo.FatherJobAddress");

                    b.Property<string>("FatherJobPhone")
                        .HasColumnName("Stdinfo.FatherJobPhone");

                    b.Property<string>("FatherName")
                        .HasColumnName("Stdinfo.FatherName");

                    b.Property<string>("FatherPhone")
                        .HasColumnName("Stdinfo.FatherPhone");

                    b.Property<string>("HomeAddress")
                        .HasColumnName("Stdinfo.HomeAddress");

                    b.Property<string>("HomePhone")
                        .HasColumnName("Stdinfo.HomePhone");

                    b.Property<string>("MomEdu")
                        .HasColumnName("Stdinfo.MomEdu");

                    b.Property<string>("MomJob")
                        .HasColumnName("Stdinfo.MomJob");

                    b.Property<string>("MomJobAddress")
                        .HasColumnName("Stdinfo.MomJobAddress");

                    b.Property<string>("MomJobPhone")
                        .HasColumnName("Stdinfo.MomJobPhone");

                    b.Property<string>("MomName")
                        .HasColumnName("Stdinfo.MomName");

                    b.Property<string>("MomPhone")
                        .HasColumnName("Stdinfo.MomPhone");

                    b.Property<string>("Religion")
                        .HasColumnName("Stdinfo.Religion");

                    b.Property<string>("SocialNet")
                        .HasColumnName("Stdinfo.SocialNet");

                    b.Property<int>("StudentId")
                        .HasColumnName("Stdinfo.Code");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("StudentInfos");
                });

            modelBuilder.Entity("SCMR_Api.Model.StudentScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreate");

                    b.Property<int>("StdClassMngId");

                    b.Property<string>("Subject");

                    b.Property<int>("TeacherId");

                    b.Property<string>("Title");

                    b.Property<string>("Type");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("StdClassMngId");

                    b.HasIndex("TeacherId");

                    b.ToTable("StudentScores");
                });

            modelBuilder.Entity("SCMR_Api.Model.StudentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("StudentTypes");
                });

            modelBuilder.Entity("SCMR_Api.Model.SystemLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Desc");

                    b.Property<string>("Event");

                    b.Property<string>("Ip");

                    b.Property<string>("LogSource");

                    b.Property<int>("agentId");

                    b.Property<string>("agentName");

                    b.Property<string>("agnetType");

                    b.HasKey("Id");

                    b.ToTable("SystemLogs");
                });

            modelBuilder.Entity("SCMR_Api.Model.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tch.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllCourseAccess");

                    b.Property<int>("Code")
                        .HasColumnName("Tch.Id");

                    b.Property<string>("Name")
                        .HasColumnName("Tch.Name");

                    b.Property<int>("OrgPersonId")
                        .HasColumnName("Tch.PrsCode");

                    b.Property<string>("Password")
                        .HasColumnName("Tch.Password");

                    b.HasKey("Id");

                    b.HasIndex("OrgPersonId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("SCMR_Api.Model.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsRemoved");

                    b.Property<int>("Order");

                    b.Property<int>("ReciverId");

                    b.Property<string>("ReciverName");

                    b.Property<int>("ReciverType");

                    b.Property<int>("SenderId");

                    b.Property<string>("SenderName");

                    b.Property<int>("SenderType");

                    b.Property<int>("State");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("SCMR_Api.Model.TicketConversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("Date");

                    b.Property<string>("FileUrl");

                    b.Property<bool>("IsSeen");

                    b.Property<bool>("IsSender");

                    b.Property<int>("Rate");

                    b.Property<int>("TicketId");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketConversations");
                });

            modelBuilder.Entity("SCMR_Api.Model.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tsch.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnName("Tsch.CourseCode");

                    b.Property<string>("Name")
                        .HasColumnName("Tsch.Name");

                    b.Property<int>("TeacherId")
                        .HasColumnName("Tsch.TeacherCode");

                    b.Property<int?>("TeacherId1");

                    b.Property<TimeSpan>("TimeEnd")
                        .HasColumnName("Tsch.TimeEnd");

                    b.Property<TimeSpan>("TimeStart")
                        .HasColumnName("Tsch.TimeStart");

                    b.Property<int>("TimeandDaysId")
                        .HasColumnName("Tsch.DaysId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TeacherId1");

                    b.HasIndex("TimeandDaysId");

                    b.ToTable("TimeSchedules");
                });

            modelBuilder.Entity("SCMR_Api.Model.TimeandDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Td.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("Td.Name");

                    b.Property<bool>("fri")
                        .HasColumnName("Td.fri");

                    b.Property<bool>("mon")
                        .HasColumnName("Td.mon");

                    b.Property<bool>("sat")
                        .HasColumnName("Td.sat");

                    b.Property<bool>("sun")
                        .HasColumnName("Td.sun");

                    b.Property<bool>("thr")
                        .HasColumnName("Td.thr");

                    b.Property<bool>("tue")
                        .HasColumnName("Td.tue");

                    b.Property<bool>("wed")
                        .HasColumnName("Td.wed");

                    b.HasKey("Id");

                    b.ToTable("TimeandDays");
                });

            modelBuilder.Entity("SCMR_Api.Model.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnTitle");

                    b.Property<int>("Order");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("SCMR_Api.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdd");

                    b.Property<DateTime>("DateEdit");

                    b.Property<string>("Firstname");

                    b.Property<Guid>("GId");

                    b.Property<string>("Lastname");

                    b.Property<string>("MeliCode");

                    b.Property<string>("Password");

                    b.Property<string>("PicUrl");

                    b.Property<int>("RoleId");

                    b.Property<int>("UserState");

                    b.Property<string>("UserStateDesc");

                    b.Property<string>("Username");

                    b.Property<bool>("isLogedIn");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdd = new DateTime(2021, 2, 21, 20, 19, 23, 146, DateTimeKind.Local).AddTicks(3591),
                            DateEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "میثم",
                            GId = new Guid("40949c3b-09a4-43b1-b6bf-94cedc04d224"),
                            Lastname = "زارع",
                            MeliCode = "2282795547",
                            Password = "12345678",
                            RoleId = 1,
                            UserState = 1,
                            UserStateDesc = "",
                            Username = "meysam",
                            isLogedIn = false
                        });
                });

            modelBuilder.Entity("SCMR_Api.Model.WorkBookDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColAvgExam");

                    b.Property<string>("ColCourseName");

                    b.Property<string>("ColExam1");

                    b.Property<string>("ColExam12");

                    b.Property<string>("ColExam2");

                    b.Property<string>("ColExam3");

                    b.Property<string>("ColExam34");

                    b.Property<string>("ColExam4");

                    b.Property<string>("ColExamPercent");

                    b.Property<string>("ColMaxInClass");

                    b.Property<string>("ColMinInClass");

                    b.Property<int>("ColRow");

                    b.Property<string>("ColScoreInClass");

                    b.Property<string>("ColScoreInGrade");

                    b.Property<string>("ColSumExam");

                    b.Property<string>("ColYearExam");

                    b.Property<int>("StdId");

                    b.Property<string>("StdName");

                    b.Property<bool>("haveRequestToReview");

                    b.HasKey("Id");

                    b.ToTable("Tbl_WorkBook_Details");
                });

            modelBuilder.Entity("SCMR_Api.Model.WorkBookHeader", b =>
                {
                    b.Property<int>("StdId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class");

                    b.Property<int>("Id");

                    b.Property<string>("StdName");

                    b.Property<string>("Year");

                    b.Property<string>("enzebat1");

                    b.Property<string>("enzebat2");

                    b.Property<string>("jame1");

                    b.Property<string>("jame2");

                    b.Property<string>("jamekol");

                    b.Property<string>("moadelkol");

                    b.Property<string>("nobat1");

                    b.Property<string>("nobat2");

                    b.Property<string>("rotbeclass");

                    b.Property<string>("rotbepayeh");

                    b.Property<int>("state");

                    b.HasKey("StdId");

                    b.ToTable("Tbl_WorkBook_Header");
                });

            modelBuilder.Entity("SCMR_Api.Model.Workbook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<bool>("IsShow");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Workbooks");
                });

            modelBuilder.Entity("SCMR_Api.Model.Writer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Clap");

                    b.Property<string>("Desc");

                    b.Property<string>("FullName");

                    b.Property<string>("PicUrl");

                    b.HasKey("Id");

                    b.ToTable("Writers");
                });

            modelBuilder.Entity("SCMR_Api.Model.Yeareducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("edu.YeareduCode")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEnd")
                        .HasColumnName("edu.DateEnd");

                    b.Property<DateTime>("DateStart")
                        .HasColumnName("edu.DateStart");

                    b.Property<string>("Desc")
                        .HasColumnName("edu.Desc");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .HasColumnName("edu.YeareduName");

                    b.Property<int>("ScoreType");

                    b.HasKey("Id");

                    b.ToTable("Yeareducations");
                });

            modelBuilder.Entity("SCMR_Api.Model.Attribute", b =>
                {
                    b.HasOne("SCMR_Api.Model.Category", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId");

                    b.HasOne("SCMR_Api.Model.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId");

                    b.HasOne("SCMR_Api.Model.Unit", "Unit")
                        .WithMany("Attributes")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.AttributeOption", b =>
                {
                    b.HasOne("SCMR_Api.Model.Attribute", "Attribute")
                        .WithMany("AttributeOptions")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Category", b =>
                {
                    b.HasOne("SCMR_Api.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("SCMR_Api.Model.ExamType", "ExamType")
                        .WithMany()
                        .HasForeignKey("ExamTypeId");

                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("SCMR_Api.Model.Category", "ParentCategory")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("SCMR_Api.Model.Workbook", "Workbook")
                        .WithMany()
                        .HasForeignKey("WorkbookId");
                });

            modelBuilder.Entity("SCMR_Api.Model.Chat", b =>
                {
                    b.HasOne("SCMR_Api.Model.User", "ReciverUser")
                        .WithMany("RecivedChat")
                        .HasForeignKey("ReciverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.User", "SenderUser")
                        .WithMany("SendedChat")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SCMR_Api.Model.Class", b =>
                {
                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("Classes")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SCMR_Api.Model.ClassBook", b =>
                {
                    b.HasOne("SCMR_Api.Model.Class", "Class")
                        .WithMany("ClassBooks")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany("ClassBooks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("ClassBooks")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.InsTitute", "InsTitute")
                        .WithMany("ClassBooks")
                        .HasForeignKey("InsTituteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithMany("ClassBooks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Teacher", "Teacher")
                        .WithMany("ClassBooks")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Yeareducation", "Yeareducation")
                        .WithMany("ClassBooks")
                        .HasForeignKey("YeareducationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Course", b =>
                {
                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("Courses")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Exam", b =>
                {
                    b.HasOne("SCMR_Api.Model.Class", "Class")
                        .WithMany("Exams")
                        .HasForeignKey("ClassId");

                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany("Exams")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.ExamType", "ExamType")
                        .WithMany("Exams")
                        .HasForeignKey("ExamTypeId");

                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("Exams")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Exam", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("SCMR_Api.Model.Teacher", "Teacher")
                        .WithMany("Exams")
                        .HasForeignKey("TeacherId");

                    b.HasOne("SCMR_Api.Model.Workbook", "Workbook")
                        .WithMany("Exams")
                        .HasForeignKey("WorkbookId");

                    b.HasOne("SCMR_Api.Model.Yeareducation")
                        .WithMany("Exams")
                        .HasForeignKey("YeareducationId");
                });

            modelBuilder.Entity("SCMR_Api.Model.ExamScore", b =>
                {
                    b.HasOne("SCMR_Api.Model.Exam", "Exam")
                        .WithMany("ExamScores")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithMany("ExamScores")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.Contract", b =>
                {
                    b.HasOne("SCMR_Api.Model.Financial.ContractType", "ContractType")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.StdPayment", b =>
                {
                    b.HasOne("SCMR_Api.Model.Financial.Contract", "Contract")
                        .WithMany("StdPayments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Financial.PaymentType", "PaymentType")
                        .WithMany("StdPayments")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.StdClassMng", "StdClassMng")
                        .WithMany()
                        .HasForeignKey("StdClassMngId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithMany("StudentPayments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Grade", b =>
                {
                    b.HasOne("SCMR_Api.Model.InsTitute", "Titute")
                        .WithMany("Grades")
                        .HasForeignKey("TituteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Yeareducation", "Yeareducation")
                        .WithMany("Grades")
                        .HasForeignKey("YeareducationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.Comment", b =>
                {
                    b.HasOne("SCMR_Api.Model.Index.Comment", "Parent")
                        .WithMany("Childrens")
                        .HasForeignKey("ParentId");

                    b.HasOne("SCMR_Api.Model.Index.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.MainSlideShow", b =>
                {
                    b.HasOne("SCMR_Api.Model.Index.Post", "Post")
                        .WithMany("MainSlideShows")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.Picture", b =>
                {
                    b.HasOne("SCMR_Api.Model.Index.PictureGallery", "PictureGallery")
                        .WithMany("Pictures")
                        .HasForeignKey("PictureGalleryId");
                });

            modelBuilder.Entity("SCMR_Api.Model.Index.Schedule", b =>
                {
                    b.HasOne("SCMR_Api.Model.Index.Post", "Post")
                        .WithMany("Schedules")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.InsTitute", b =>
                {
                    b.HasOne("SCMR_Api.Model.InsTitute", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("TituteCode");
                });

            modelBuilder.Entity("SCMR_Api.Model.Item", b =>
                {
                    b.HasOne("SCMR_Api.Model.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Unit", "Unit")
                        .WithMany("Items")
                        .HasForeignKey("UnitId");
                });

            modelBuilder.Entity("SCMR_Api.Model.ItemAttribute", b =>
                {
                    b.HasOne("SCMR_Api.Model.Attribute", "Attribute")
                        .WithMany("ItemAttribute")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.Item", "Item")
                        .WithMany("ItemAttribute")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SCMR_Api.Model.Link", b =>
                {
                    b.HasOne("SCMR_Api.Model.Product", "Product")
                        .WithMany("Links")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.NotificationAgent", b =>
                {
                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithMany("NotificationAgents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.NotificationSeen", b =>
                {
                    b.HasOne("SCMR_Api.Model.Notification")
                        .WithMany("NotificationSeens")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.OnlineClass", b =>
                {
                    b.HasOne("SCMR_Api.Model.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId");

                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("SCMR_Api.Model.OnlineClassServer", "OnlineClassServer")
                        .WithMany("OnlineClasses")
                        .HasForeignKey("OnlineClassServerId");
                });

            modelBuilder.Entity("SCMR_Api.Model.OnlineClassLogin", b =>
                {
                    b.HasOne("SCMR_Api.Model.OnlineClass", "OnlineClass")
                        .WithMany("OnlineClassLogins")
                        .HasForeignKey("OnlineClassId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.OrgChart", b =>
                {
                    b.HasOne("SCMR_Api.Model.OrgChart", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("SCMR_Api.Model.OrgPerson", b =>
                {
                    b.HasOne("SCMR_Api.Model.Education", "Education")
                        .WithMany("OrgPeople")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Insurance", "Insurance")
                        .WithMany("OrgPeople")
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.OrgChart", "OrgChart")
                        .WithMany("OrgPeople")
                        .HasForeignKey("OrgChartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Salary", "Salary")
                        .WithMany("OrgPeople")
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Product", b =>
                {
                    b.HasOne("SCMR_Api.Model.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Writer", "Writer")
                        .WithMany("Products")
                        .HasForeignKey("WriterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.ProductComment", b =>
                {
                    b.HasOne("SCMR_Api.Model.ProductComment", "Parent")
                        .WithMany("Childrens")
                        .HasForeignKey("ParentId");

                    b.HasOne("SCMR_Api.Model.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Question", b =>
                {
                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany("Questions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("Questions")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.QuestionOption", b =>
                {
                    b.HasOne("SCMR_Api.Model.Question", "Question")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.RegisterItemLogin", b =>
                {
                    b.HasOne("SCMR_Api.Model.Category", "Category")
                        .WithMany("RegisterItemLogins")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.StdClassMng", b =>
                {
                    b.HasOne("SCMR_Api.Model.Class", "Class")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.InsTitute", "InsTitute")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("InsTituteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.StudentType", "StudentType")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("StudentTypeId");

                    b.HasOne("SCMR_Api.Model.Yeareducation", "Yeareducation")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("YeareducationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SCMR_Api.Model.StudentDailySchedule", b =>
                {
                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.StdClassMng", "StdClassMng")
                        .WithMany()
                        .HasForeignKey("StdClassMngId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.StudentInfo", b =>
                {
                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithOne("StudentInfo")
                        .HasForeignKey("SCMR_Api.Model.StudentInfo", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.StudentScore", b =>
                {
                    b.HasOne("SCMR_Api.Model.StdClassMng", "StdClassMng")
                        .WithMany("StudentScores")
                        .HasForeignKey("StdClassMngId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Teacher", "Teacher")
                        .WithMany("StudentScores")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Teacher", b =>
                {
                    b.HasOne("SCMR_Api.Model.OrgPerson", "OrgPerson")
                        .WithMany("Teachers")
                        .HasForeignKey("OrgPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.TicketConversation", b =>
                {
                    b.HasOne("SCMR_Api.Model.Ticket", "Ticket")
                        .WithMany("TicketConversations")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.TimeSchedule", b =>
                {
                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.Teacher")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("TeacherId1");

                    b.HasOne("SCMR_Api.Model.TimeandDays", "TimeandDays")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("TimeandDaysId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.User", b =>
                {
                    b.HasOne("SCMR_Api.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
