// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SCMR_Api.Data;

namespace SCMR_Api.Migrations
{
    [DbContext(typeof(Data.DbContext))]
    [Migration("20190702163423_initUpdate20_3")]
    partial class initUpdate20_3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SCMR_Api.Model.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttrType");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Desc");

                    b.Property<Guid>("GId");

                    b.Property<bool>("IsInClient");

                    b.Property<bool>("IsInSearch");

                    b.Property<bool>("IsInShowInfo");

                    b.Property<bool>("IsUniq");

                    b.Property<int>("Order");

                    b.Property<int>("OrderInInfo");

                    b.Property<string>("Title");

                    b.Property<int>("UnitId");

                    b.Property<string>("Values");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UnitId");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("SCMR_Api.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveMessage");

                    b.Property<string>("BtnTitle");

                    b.Property<DateTime?>("DateExpire");

                    b.Property<DateTime?>("DatePublish");

                    b.Property<string>("DeActiveMessage");

                    b.Property<string>("Desc");

                    b.Property<string>("EndMessage");

                    b.Property<bool>("HaveEntringCard");

                    b.Property<bool>("HaveInfo");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsInfoShow");

                    b.Property<int?>("ParentId");

                    b.Property<string>("RegisterPicUrl");

                    b.Property<int>("RoleAccess");

                    b.Property<string>("ShowInfoPicUrl");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SCMR_Api.Model.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName");

                    b.Property<bool>("FileStatus");

                    b.Property<string>("FileUrl");

                    b.Property<DateTime?>("ReciveDate");

                    b.Property<bool>("ReciveStatus");

                    b.Property<int>("ReciverId");

                    b.Property<DateTime>("SendDate");

                    b.Property<int>("SenderId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("SCMR_Api.Model.ChatRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Allow");

                    b.Property<int>("RoleFromId");

                    b.Property<int>("RoleToId");

                    b.HasKey("Id");

                    b.ToTable("ChatRoles");
                });

            modelBuilder.Entity("SCMR_Api.Model.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Cls.Autonumber")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capasity")
                        .HasColumnName("Cls.Capasity");

                    b.Property<int>("Code")
                        .HasColumnName("Cls.Id");

                    b.Property<int>("GradeId")
                        .HasColumnName("Grd.Id");

                    b.Property<string>("Name")
                        .HasColumnName("Cls.Name");

                    b.Property<int>("Order")
                        .HasColumnName("Cls.Order");

                    b.Property<string>("Section")
                        .HasColumnName("Cls.Section");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("sm.Class");
                });

            modelBuilder.Entity("SCMR_Api.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Crs.Code")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseMix")
                        .HasColumnName("Crs.CourseMix");

                    b.Property<int>("GradeId")
                        .HasColumnName("Crs.GradeCode");

                    b.Property<string>("Name")
                        .HasColumnName("Crs.Name");

                    b.Property<int>("Order")
                        .HasColumnName("Crs.CourseOrder");

                    b.Property<int>("Order2")
                        .HasColumnName("Crs.CourseOrder2");

                    b.Property<int>("TeachTime")
                        .HasColumnName("Crs.TeachTime");

                    b.Property<int>("TeacherId")
                        .HasColumnName("Crs.TeacherCode");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("TeacherId");

                    b.ToTable("sm.Course");
                });

            modelBuilder.Entity("SCMR_Api.Model.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("edu.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("edu.Name");

                    b.HasKey("Id");

                    b.ToTable("sm.EducationTable");
                });

            modelBuilder.Entity("SCMR_Api.Model.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Exm.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnName("Ex.Class");

                    b.Property<int>("CourseId")
                        .HasColumnName("Ex.Course");

                    b.Property<DateTime>("Date")
                        .HasColumnName("Ex.Date");

                    b.Property<int>("ExamTypeId")
                        .HasColumnName("Ex.ExamTyp");

                    b.Property<int>("GradeId")
                        .HasColumnName("Ex.Grade");

                    b.Property<string>("Name")
                        .HasColumnName("Ex.name");

                    b.Property<int>("NumberQ")
                        .HasColumnName("Ex.AmauntQuestion");

                    b.Property<int>("Order")
                        .HasColumnName("Ex.Order");

                    b.Property<int?>("ParentId");

                    b.Property<bool>("Result")
                        .HasColumnName("Ex.Result");

                    b.Property<DateTime>("ResultDate")
                        .HasColumnName("Ex.ResultDate");

                    b.Property<string>("Source")
                        .HasColumnName("Ex.Source");

                    b.Property<int>("TeacherId")
                        .HasColumnName("Ex.Teacher");

                    b.Property<int>("Time")
                        .HasColumnName("Ex.Time");

                    b.Property<int>("TopScore")
                        .HasColumnName("Ex.TopScore");

                    b.Property<int>("YeareducationId")
                        .HasColumnName("Ex.Year");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("CourseId");

                    b.HasIndex("ExamTypeId");

                    b.HasIndex("GradeId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("YeareducationId");

                    b.ToTable("sm.Exams");
                });

            modelBuilder.Entity("SCMR_Api.Model.ExamScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Exsc.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlankAnswer")
                        .HasColumnName("Ex.BlankAnswer");

                    b.Property<int>("ExamId")
                        .HasColumnName("Exsc.Examid");

                    b.Property<int>("FalseAnswer")
                        .HasColumnName("Ex.WrongAnswer");

                    b.Property<int>("NumberQ")
                        .HasColumnName("Ex.AmauntQuestion");

                    b.Property<double>("Score")
                        .HasColumnName("Ex.Score");

                    b.Property<int>("StudentId")
                        .HasColumnName("Exsc.Studentid");

                    b.Property<int>("TopScore")
                        .HasColumnName("Ex.TopScore");

                    b.Property<int>("TrueAnswer")
                        .HasColumnName("Ex.CorrectAnswer");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("StudentId");

                    b.ToTable("sm.ExamScore");
                });

            modelBuilder.Entity("SCMR_Api.Model.ExamType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Extyp.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnName("Extyp.Desc");

                    b.Property<string>("Name")
                        .HasColumnName("Extyp.Name");

                    b.HasKey("Id");

                    b.ToTable("sm.ExamTyp");
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<int>("ContractTypeId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("FileUrl");

                    b.Property<int>("PartyContractId");

                    b.Property<string>("PartyContractName");

                    b.Property<decimal>("Price");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ContractTypeId");

                    b.ToTable("Fin.Contract");
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.ContractType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int>("Table");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Fin.ContractType");
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PatmentType.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnName("PatmentType.Code");

                    b.Property<string>("Desc")
                        .HasColumnName("PatmentType.Desc");

                    b.Property<string>("Title")
                        .HasColumnName("PatmentType.Title");

                    b.HasKey("Id");

                    b.ToTable("Fin.PaymentType");
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.StdPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StdPayment.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bank")
                        .HasColumnName("StdPayment.Bank");

                    b.Property<int>("ContractId");

                    b.Property<string>("Hesab")
                        .HasColumnName("StdPayment.AccNum");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnName("StdPayment.PaymentTyp");

                    b.Property<decimal>("Price")
                        .HasColumnName("StdPayment.Amount");

                    b.Property<string>("RefNum")
                        .HasColumnName("StdPayment.Ref");

                    b.Property<string>("Shobe")
                        .HasColumnName("StdPayment.BankSection");

                    b.Property<int>("StudentId")
                        .HasColumnName("StdPayment.Student");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Fin.StdPayment");
                });

            modelBuilder.Entity("SCMR_Api.Model.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Grd.Autonumber")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capasity")
                        .HasColumnName("Grd.Capasity");

                    b.Property<string>("Code")
                        .HasColumnName("Grd.Id");

                    b.Property<string>("Desc")
                        .HasColumnName("Grd.Desc");

                    b.Property<string>("InternalCode")
                        .HasColumnName("Grd.InternalCode");

                    b.Property<string>("Name")
                        .HasColumnName("Grd.Name");

                    b.Property<int>("Order")
                        .HasColumnName("Grd.Order");

                    b.Property<string>("OrgCode")
                        .HasColumnName("Grd.OrgCode");

                    b.Property<int>("TituteId")
                        .HasColumnName("Grd.insCode");

                    b.Property<int>("YeareducationId")
                        .HasColumnName("Grd.eduyearCode");

                    b.HasKey("Id");

                    b.HasIndex("TituteId");

                    b.HasIndex("YeareducationId");

                    b.ToTable("sm.Grade");
                });

            modelBuilder.Entity("SCMR_Api.Model.InsTitute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ins.AutoNum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("ins.Address");

                    b.Property<string>("City")
                        .HasColumnName("ins.City");

                    b.Property<string>("Desc")
                        .HasColumnName("ins.Desc");

                    b.Property<string>("Email")
                        .HasColumnName("ins.Email");

                    b.Property<string>("Name")
                        .HasColumnName("ins.Name");

                    b.Property<int>("OrgCode")
                        .HasColumnName("ins.OrgCode");

                    b.Property<string>("OrgSection")
                        .HasColumnName("ins.OrgSection");

                    b.Property<int>("OrgSex")
                        .HasColumnName("ins.OrgSex");

                    b.Property<string>("PostCode")
                        .HasColumnName("ins.PostCode");

                    b.Property<string>("State")
                        .HasColumnName("ins.State");

                    b.Property<string>("Tell")
                        .HasColumnName("ins.Tell");

                    b.Property<int?>("TituteCode")
                        .HasColumnName("ins.Code");

                    b.HasKey("Id");

                    b.HasIndex("TituteCode");

                    b.ToTable("sm.insTitute");
                });

            modelBuilder.Entity("SCMR_Api.Model.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ins.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("ins.Name");

                    b.HasKey("Id");

                    b.ToTable("sm.InsuranceTable");
                });

            modelBuilder.Entity("SCMR_Api.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTime?>("DateAdd");

                    b.Property<DateTime?>("DateEdit");

                    b.Property<bool>("IsActive");

                    b.Property<long>("RahCode");

                    b.Property<string>("Tags");

                    b.Property<string>("Title")
                        .HasMaxLength(50);

                    b.Property<int>("UnitId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UnitId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SCMR_Api.Model.ItemAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeFilePath");

                    b.Property<int>("AttributeId");

                    b.Property<string>("AttrubuteValue");

                    b.Property<int>("ItemId");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemAttributes");
                });

            modelBuilder.Entity("SCMR_Api.Model.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Desc");

                    b.Property<string>("Event");

                    b.Property<string>("Ip");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SCMR_Api.Model.OrgChart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Org.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnName("Org.Code");

                    b.Property<string>("Desc")
                        .HasColumnName("Org.Desc");

                    b.Property<string>("Name")
                        .HasColumnName("Org.Name");

                    b.Property<int>("Order")
                        .HasColumnName("Org.Order");

                    b.Property<int?>("ParentId")
                        .HasColumnName("Org.ParentCode");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("sm.OrgChart");
                });

            modelBuilder.Entity("SCMR_Api.Model.OrgPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Orgprs.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("Orgprs.Address");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("Orgprs.BirthDate");

                    b.Property<int>("Child")
                        .HasColumnName("Orgprs.Child");

                    b.Property<int>("Code")
                        .HasColumnName("Orgprs.Code");

                    b.Property<int>("EducationId")
                        .HasColumnName("Orgprs.edu");

                    b.Property<string>("Email")
                        .HasColumnName("Orgprs.Email");

                    b.Property<string>("FatherName")
                        .HasColumnName("Orgprs.FatherName");

                    b.Property<string>("IdNum")
                        .HasColumnName("Orgprs.idnum");

                    b.Property<string>("IdNumber")
                        .HasColumnName("Orgprs.idnumber");

                    b.Property<string>("IdSerial")
                        .HasColumnName("Orgprs.idserial");

                    b.Property<string>("InsuranceCode")
                        .HasColumnName("Orgprs.insuranceId");

                    b.Property<int>("InsuranceId")
                        .HasColumnName("Orgprs.insuranceTyp");

                    b.Property<string>("LastName")
                        .HasColumnName("Orgprs.LastName");

                    b.Property<bool>("Marrage")
                        .HasColumnName("Orgprs.Marrage");

                    b.Property<string>("Name")
                        .HasColumnName("Orgprs.Name");

                    b.Property<int>("OrgChartId")
                        .HasColumnName("Orgprs.ChartCode");

                    b.Property<string>("Phone")
                        .HasColumnName("Orgprs.Phone");

                    b.Property<int>("SalaryId")
                        .HasColumnName("Orgprs.Salary");

                    b.Property<string>("Tell")
                        .HasColumnName("Orgprs.Tell");

                    b.Property<string>("Type")
                        .HasColumnName("Orgprs.Type");

                    b.Property<string>("TypeYear")
                        .HasColumnName("Orgprs.TypeYear");

                    b.Property<int>("sex")
                        .HasColumnName("Orgprs.sex");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("OrgChartId");

                    b.HasIndex("SalaryId");

                    b.ToTable("sm.OrgPerson");
                });

            modelBuilder.Entity("SCMR_Api.Model.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Que.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnName("Que.Answer");

                    b.Property<int>("CourseId")
                        .HasColumnName("Que.Courseid");

                    b.Property<int>("Defact")
                        .HasColumnName("Que.Defact");

                    b.Property<string>("Desc1")
                        .HasColumnName("Que.Description");

                    b.Property<string>("Desc2")
                        .HasColumnName("Que.Desc");

                    b.Property<int>("GradeId")
                        .HasColumnName("Que.Gradeid");

                    b.Property<double>("Mark")
                        .HasColumnName("Que.Mark");

                    b.Property<string>("Name")
                        .HasColumnName("Que.Name");

                    b.Property<string>("Person")
                        .HasColumnName("Que.SourceCreation");

                    b.Property<string>("Source")
                        .HasColumnName("Que.Source");

                    b.Property<string>("Title")
                        .HasColumnName("Que.Question");

                    b.Property<int>("Type")
                        .HasColumnName("Que.Typ");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GradeId");

                    b.ToTable("sm.Questions");
                });

            modelBuilder.Entity("SCMR_Api.Model.QuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("QueOp.id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsTrue")
                        .HasColumnName("QueOp.isAnswer");

                    b.Property<string>("Name")
                        .HasColumnName("QueOp.name");

                    b.Property<int>("QuestionId")
                        .HasColumnName("QueOp.Questionid");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("sm.QuestionOptions");
                });

            modelBuilder.Entity("SCMR_Api.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Add_Attribute");

                    b.Property<bool>("Add_Category");

                    b.Property<bool>("Add_Class");

                    b.Property<bool>("Add_Contract");

                    b.Property<bool>("Add_ContractType");

                    b.Property<bool>("Add_Course");

                    b.Property<bool>("Add_Education");

                    b.Property<bool>("Add_Exam");

                    b.Property<bool>("Add_ExamScore");

                    b.Property<bool>("Add_ExamType");

                    b.Property<bool>("Add_Grade");

                    b.Property<bool>("Add_InsTitute");

                    b.Property<bool>("Add_Insurance");

                    b.Property<bool>("Add_Item");

                    b.Property<bool>("Add_OrgChart");

                    b.Property<bool>("Add_OrgPerson");

                    b.Property<bool>("Add_PaymentType");

                    b.Property<bool>("Add_Question");

                    b.Property<bool>("Add_QuestionOption");

                    b.Property<bool>("Add_Role");

                    b.Property<bool>("Add_Salary");

                    b.Property<bool>("Add_StdPayment");

                    b.Property<bool>("Add_Student");

                    b.Property<bool>("Add_Teacher");

                    b.Property<bool>("Add_TimeSchedule");

                    b.Property<bool>("Add_TimeandDays");

                    b.Property<bool>("Add_Unit");

                    b.Property<bool>("Add_User");

                    b.Property<bool>("Add_Yeareducation");

                    b.Property<bool>("Edit_Attribute");

                    b.Property<bool>("Edit_Category");

                    b.Property<bool>("Edit_Class");

                    b.Property<bool>("Edit_Contract");

                    b.Property<bool>("Edit_ContractType");

                    b.Property<bool>("Edit_Course");

                    b.Property<bool>("Edit_Education");

                    b.Property<bool>("Edit_Exam");

                    b.Property<bool>("Edit_ExamScore");

                    b.Property<bool>("Edit_ExamType");

                    b.Property<bool>("Edit_Grade");

                    b.Property<bool>("Edit_InsTitute");

                    b.Property<bool>("Edit_Insurance");

                    b.Property<bool>("Edit_Item");

                    b.Property<bool>("Edit_OrgChart");

                    b.Property<bool>("Edit_OrgPerson");

                    b.Property<bool>("Edit_PaymentType");

                    b.Property<bool>("Edit_Question");

                    b.Property<bool>("Edit_QuestionOption");

                    b.Property<bool>("Edit_Role");

                    b.Property<bool>("Edit_Salary");

                    b.Property<bool>("Edit_StdPayment");

                    b.Property<bool>("Edit_Student");

                    b.Property<bool>("Edit_Teacher");

                    b.Property<bool>("Edit_TimeSchedule");

                    b.Property<bool>("Edit_TimeandDays");

                    b.Property<bool>("Edit_Unit");

                    b.Property<bool>("Edit_User");

                    b.Property<bool>("Edit_Yeareducation");

                    b.Property<string>("Name");

                    b.Property<bool>("Remove_Attribute");

                    b.Property<bool>("Remove_Category");

                    b.Property<bool>("Remove_Class");

                    b.Property<bool>("Remove_Contract");

                    b.Property<bool>("Remove_ContractType");

                    b.Property<bool>("Remove_Course");

                    b.Property<bool>("Remove_Education");

                    b.Property<bool>("Remove_Exam");

                    b.Property<bool>("Remove_ExamScore");

                    b.Property<bool>("Remove_ExamType");

                    b.Property<bool>("Remove_Grade");

                    b.Property<bool>("Remove_InsTitute");

                    b.Property<bool>("Remove_Insurance");

                    b.Property<bool>("Remove_Item");

                    b.Property<bool>("Remove_OrgChart");

                    b.Property<bool>("Remove_OrgPerson");

                    b.Property<bool>("Remove_PaymentType");

                    b.Property<bool>("Remove_Question");

                    b.Property<bool>("Remove_QuestionOption");

                    b.Property<bool>("Remove_Role");

                    b.Property<bool>("Remove_Salary");

                    b.Property<bool>("Remove_StdPayment");

                    b.Property<bool>("Remove_Student");

                    b.Property<bool>("Remove_Teacher");

                    b.Property<bool>("Remove_TimeSchedule");

                    b.Property<bool>("Remove_TimeandDays");

                    b.Property<bool>("Remove_Unit");

                    b.Property<bool>("Remove_User");

                    b.Property<bool>("Remove_Yeareducation");

                    b.Property<bool>("Validation_User");

                    b.Property<bool>("View_Attribute");

                    b.Property<bool>("View_Category");

                    b.Property<bool>("View_Class");

                    b.Property<bool>("View_Contract");

                    b.Property<bool>("View_ContractType");

                    b.Property<bool>("View_Course");

                    b.Property<bool>("View_Education");

                    b.Property<bool>("View_Exam");

                    b.Property<bool>("View_ExamScore");

                    b.Property<bool>("View_ExamType");

                    b.Property<bool>("View_Grade");

                    b.Property<bool>("View_InsTitute");

                    b.Property<bool>("View_Insurance");

                    b.Property<bool>("View_Item");

                    b.Property<bool>("View_OrgChart");

                    b.Property<bool>("View_OrgPerson");

                    b.Property<bool>("View_PaymentType");

                    b.Property<bool>("View_Question");

                    b.Property<bool>("View_QuestionOption");

                    b.Property<bool>("View_Role");

                    b.Property<bool>("View_Salary");

                    b.Property<bool>("View_StdPayment");

                    b.Property<bool>("View_Student");

                    b.Property<bool>("View_Teacher");

                    b.Property<bool>("View_TimeSchedule");

                    b.Property<bool>("View_TimeandDays");

                    b.Property<bool>("View_Unit");

                    b.Property<bool>("View_User");

                    b.Property<bool>("View_Yeareducation");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Add_Attribute = true,
                            Add_Category = true,
                            Add_Class = false,
                            Add_Contract = false,
                            Add_ContractType = false,
                            Add_Course = false,
                            Add_Education = false,
                            Add_Exam = false,
                            Add_ExamScore = false,
                            Add_ExamType = false,
                            Add_Grade = false,
                            Add_InsTitute = false,
                            Add_Insurance = false,
                            Add_Item = true,
                            Add_OrgChart = false,
                            Add_OrgPerson = false,
                            Add_PaymentType = false,
                            Add_Question = false,
                            Add_QuestionOption = false,
                            Add_Role = true,
                            Add_Salary = false,
                            Add_StdPayment = false,
                            Add_Student = false,
                            Add_Teacher = false,
                            Add_TimeSchedule = false,
                            Add_TimeandDays = false,
                            Add_Unit = true,
                            Add_User = true,
                            Add_Yeareducation = false,
                            Edit_Attribute = true,
                            Edit_Category = true,
                            Edit_Class = false,
                            Edit_Contract = false,
                            Edit_ContractType = false,
                            Edit_Course = false,
                            Edit_Education = false,
                            Edit_Exam = false,
                            Edit_ExamScore = false,
                            Edit_ExamType = false,
                            Edit_Grade = false,
                            Edit_InsTitute = false,
                            Edit_Insurance = false,
                            Edit_Item = true,
                            Edit_OrgChart = false,
                            Edit_OrgPerson = false,
                            Edit_PaymentType = false,
                            Edit_Question = false,
                            Edit_QuestionOption = false,
                            Edit_Role = true,
                            Edit_Salary = false,
                            Edit_StdPayment = false,
                            Edit_Student = false,
                            Edit_Teacher = false,
                            Edit_TimeSchedule = false,
                            Edit_TimeandDays = false,
                            Edit_Unit = true,
                            Edit_User = true,
                            Edit_Yeareducation = false,
                            Name = "مدیر سیستم",
                            Remove_Attribute = true,
                            Remove_Category = true,
                            Remove_Class = false,
                            Remove_Contract = false,
                            Remove_ContractType = false,
                            Remove_Course = false,
                            Remove_Education = false,
                            Remove_Exam = false,
                            Remove_ExamScore = false,
                            Remove_ExamType = false,
                            Remove_Grade = false,
                            Remove_InsTitute = false,
                            Remove_Insurance = false,
                            Remove_Item = true,
                            Remove_OrgChart = false,
                            Remove_OrgPerson = false,
                            Remove_PaymentType = false,
                            Remove_Question = false,
                            Remove_QuestionOption = false,
                            Remove_Role = true,
                            Remove_Salary = false,
                            Remove_StdPayment = false,
                            Remove_Student = false,
                            Remove_Teacher = false,
                            Remove_TimeSchedule = false,
                            Remove_TimeandDays = false,
                            Remove_Unit = true,
                            Remove_User = true,
                            Remove_Yeareducation = false,
                            Validation_User = true,
                            View_Attribute = true,
                            View_Category = true,
                            View_Class = false,
                            View_Contract = false,
                            View_ContractType = false,
                            View_Course = false,
                            View_Education = false,
                            View_Exam = false,
                            View_ExamScore = false,
                            View_ExamType = false,
                            View_Grade = false,
                            View_InsTitute = false,
                            View_Insurance = false,
                            View_Item = true,
                            View_OrgChart = false,
                            View_OrgPerson = false,
                            View_PaymentType = false,
                            View_Question = false,
                            View_QuestionOption = false,
                            View_Role = true,
                            View_Salary = false,
                            View_StdPayment = false,
                            View_Student = false,
                            View_Teacher = false,
                            View_TimeSchedule = false,
                            View_TimeandDays = false,
                            View_Unit = true,
                            View_User = true,
                            View_Yeareducation = false
                        });
                });

            modelBuilder.Entity("SCMR_Api.Model.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sal.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("sal.Name");

                    b.HasKey("Id");

                    b.ToTable("sm.Salary");
                });

            modelBuilder.Entity("SCMR_Api.Model.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("SCMR_Api.Model.StdClassMng", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StdClassMng.Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BehaveState")
                        .HasColumnName("Std.BehaveState");

                    b.Property<int>("ClassId")
                        .HasColumnName("Std.Classid");

                    b.Property<int>("GradeId")
                        .HasColumnName("Std.Gradeid");

                    b.Property<int>("InsTituteId")
                        .HasColumnName("Std.insid");

                    b.Property<int>("PayrollState")
                        .HasColumnName("Std.PayrollState");

                    b.Property<int>("StudentId")
                        .HasColumnName("Std.Code");

                    b.Property<int>("StudyState")
                        .HasColumnName("Std.StudyState");

                    b.Property<int>("YeareducationId")
                        .HasColumnName("Std.YearId");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("GradeId");

                    b.HasIndex("InsTituteId");

                    b.HasIndex("StudentId");

                    b.HasIndex("YeareducationId");

                    b.ToTable("sm.StdClassMng");
                });

            modelBuilder.Entity("SCMR_Api.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Std.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("Std.BirthDate");

                    b.Property<string>("BirthLocation")
                        .HasColumnName("Std.BirthLocation");

                    b.Property<int>("Code")
                        .HasColumnName("Std.Code");

                    b.Property<string>("FatherName")
                        .HasColumnName("Std.FatherName");

                    b.Property<string>("IdCardSerial")
                        .HasColumnName("Std.IdCardSerial");

                    b.Property<string>("IdNumber")
                        .HasColumnName("Std.IdNumber");

                    b.Property<string>("IdNumber2")
                        .HasColumnName("Std.IdNumber2");

                    b.Property<string>("LastName")
                        .HasColumnName("Std.LastName");

                    b.Property<string>("Name")
                        .HasColumnName("Std.Name");

                    b.Property<string>("OrgCode")
                        .HasColumnName("Std.OrgCode");

                    b.Property<int>("StudentState")
                        .HasColumnName("Std.State");

                    b.HasKey("Id");

                    b.ToTable("sm.Student");
                });

            modelBuilder.Entity("SCMR_Api.Model.StudentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Stdinfo.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc")
                        .HasColumnName("Stdinfo.Desc");

                    b.Property<string>("Email")
                        .HasColumnName("Stdinfo.Email");

                    b.Property<string>("FamilyState")
                        .HasColumnName("Stdinfo.FamilyState");

                    b.Property<string>("FatherEdu")
                        .HasColumnName("Stdinfo.FatherEdu");

                    b.Property<string>("FatherJob")
                        .HasColumnName("Stdinfo.FatherJob");

                    b.Property<string>("FatherJobAddress")
                        .HasColumnName("Stdinfo.FatherJobAddress");

                    b.Property<string>("FatherJobPhone")
                        .HasColumnName("Stdinfo.FatherJobPhone");

                    b.Property<string>("FatherName")
                        .HasColumnName("Stdinfo.FatherName");

                    b.Property<string>("FatherPhone")
                        .HasColumnName("Stdinfo.FatherPhone");

                    b.Property<string>("HomeAddress")
                        .HasColumnName("Stdinfo.HomeAddress");

                    b.Property<string>("HomePhone")
                        .HasColumnName("Stdinfo.HomePhone");

                    b.Property<string>("MomEdu")
                        .HasColumnName("Stdinfo.MomEdu");

                    b.Property<string>("MomJob")
                        .HasColumnName("Stdinfo.MomJob");

                    b.Property<string>("MomJobAddress")
                        .HasColumnName("Stdinfo.MomJobAddress");

                    b.Property<string>("MomJobPhone")
                        .HasColumnName("Stdinfo.MomJobPhone");

                    b.Property<string>("MomName")
                        .HasColumnName("Stdinfo.MomName");

                    b.Property<string>("MomPhone")
                        .HasColumnName("Stdinfo.MomPhone");

                    b.Property<string>("Religion")
                        .HasColumnName("Stdinfo.Religion");

                    b.Property<string>("SocialNet")
                        .HasColumnName("Stdinfo.SocialNet");

                    b.Property<int>("StudentId")
                        .HasColumnName("Stdinfo.Code");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.ToTable("sm.StudentInfo");
                });

            modelBuilder.Entity("SCMR_Api.Model.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tch.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnName("Tch.Id");

                    b.Property<string>("Name")
                        .HasColumnName("Tch.Name");

                    b.Property<int>("OrgPersonId")
                        .HasColumnName("Tch.PrsCode");

                    b.HasKey("Id");

                    b.HasIndex("OrgPersonId");

                    b.ToTable("sm.Teacher");
                });

            modelBuilder.Entity("SCMR_Api.Model.TimeSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tsch.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnName("Tsch.CourseCode");

                    b.Property<string>("Name")
                        .HasColumnName("Tsch.Name");

                    b.Property<int>("TeacherId")
                        .HasColumnName("Tsch.TeacherCode");

                    b.Property<int?>("TeacherId1");

                    b.Property<TimeSpan>("TimeEnd")
                        .HasColumnName("Tsch.TimeEnd");

                    b.Property<TimeSpan>("TimeStart")
                        .HasColumnName("Tsch.TimeStart");

                    b.Property<int>("TimeandDaysId")
                        .HasColumnName("Tsch.DaysId");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TeacherId1");

                    b.HasIndex("TimeandDaysId");

                    b.ToTable("sm.TimeSchedule");
                });

            modelBuilder.Entity("SCMR_Api.Model.TimeandDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Td.Autonum")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("Td.Name");

                    b.Property<bool>("fri")
                        .HasColumnName("Td.fri");

                    b.Property<bool>("mon")
                        .HasColumnName("Td.mon");

                    b.Property<bool>("sat")
                        .HasColumnName("Td.sat");

                    b.Property<bool>("sun")
                        .HasColumnName("Td.sun");

                    b.Property<bool>("thr")
                        .HasColumnName("Td.thr");

                    b.Property<bool>("tue")
                        .HasColumnName("Td.tue");

                    b.Property<bool>("wed")
                        .HasColumnName("Td.wed");

                    b.HasKey("Id");

                    b.ToTable("sm.TimeandDays");
                });

            modelBuilder.Entity("SCMR_Api.Model.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnTitle");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("SCMR_Api.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAdd");

                    b.Property<DateTime>("DateEdit");

                    b.Property<string>("Firstname");

                    b.Property<Guid>("GId");

                    b.Property<string>("Lastname");

                    b.Property<string>("MeliCode");

                    b.Property<string>("Password");

                    b.Property<string>("ProfilePic");

                    b.Property<int>("RoleId");

                    b.Property<int>("UserState");

                    b.Property<string>("UserStateDesc");

                    b.Property<string>("Username");

                    b.Property<bool>("isLogedIn");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateAdd = new DateTime(2019, 7, 2, 21, 4, 22, 875, DateTimeKind.Local).AddTicks(6818),
                            DateEdit = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Firstname = "میثم",
                            GId = new Guid("1fbc21ad-9a97-4155-8558-317f401ad0af"),
                            Lastname = "زارع",
                            MeliCode = "2282795547",
                            Password = "12345678",
                            RoleId = 1,
                            UserState = 1,
                            UserStateDesc = "",
                            Username = "meysam1",
                            isLogedIn = false
                        });
                });

            modelBuilder.Entity("SCMR_Api.Model.WorkBookDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColAvgExam");

                    b.Property<string>("ColCourseName");

                    b.Property<string>("ColExam1");

                    b.Property<string>("ColExam12");

                    b.Property<string>("ColExam2");

                    b.Property<string>("ColExam3");

                    b.Property<string>("ColExam34");

                    b.Property<string>("ColExam4");

                    b.Property<string>("ColExamPercent");

                    b.Property<string>("ColMaxInClass");

                    b.Property<string>("ColMinInClass");

                    b.Property<int>("ColRow");

                    b.Property<string>("ColScoreInClass");

                    b.Property<string>("ColScoreInGrade");

                    b.Property<string>("ColSumExam");

                    b.Property<string>("ColYearExam");

                    b.Property<int>("StdId");

                    b.Property<string>("StdName");

                    b.Property<bool>("haveRequestToReview");

                    b.HasKey("Id");

                    b.ToTable("Tbl_WorkBook_Details");
                });

            modelBuilder.Entity("SCMR_Api.Model.WorkBookHeader", b =>
                {
                    b.Property<int>("StdId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class");

                    b.Property<int>("Id");

                    b.Property<string>("StdName");

                    b.Property<string>("Year");

                    b.Property<string>("enzebat1");

                    b.Property<string>("enzebat2");

                    b.Property<string>("jame1");

                    b.Property<string>("jame2");

                    b.Property<string>("jamekol");

                    b.Property<string>("moadelkol");

                    b.Property<string>("nobat1");

                    b.Property<string>("nobat2");

                    b.Property<string>("rotbeclass");

                    b.Property<string>("rotbepayeh");

                    b.Property<int>("state");

                    b.HasKey("StdId");

                    b.ToTable("Tbl_WorkBook_Header");
                });

            modelBuilder.Entity("SCMR_Api.Model.Yeareducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("edu.YeareduCode")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEnd")
                        .HasColumnName("edu.DateEnd");

                    b.Property<DateTime>("DateStart")
                        .HasColumnName("edu.DateStart");

                    b.Property<string>("Desc")
                        .HasColumnName("edu.Desc");

                    b.Property<string>("Name")
                        .HasColumnName("edu.YeareduName");

                    b.HasKey("Id");

                    b.ToTable("sm.Yeareducation");
                });

            modelBuilder.Entity("SCMR_Api.Model.Attribute", b =>
                {
                    b.HasOne("SCMR_Api.Model.Category", "Category")
                        .WithMany("Attributes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Unit", "Unit")
                        .WithMany("Attributes")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Category", b =>
                {
                    b.HasOne("SCMR_Api.Model.Category", "ParentCategory")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("SCMR_Api.Model.Class", b =>
                {
                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("Classes")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SCMR_Api.Model.Course", b =>
                {
                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("Courses")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Exam", b =>
                {
                    b.HasOne("SCMR_Api.Model.Class", "Class")
                        .WithMany("Exams")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany("Exams")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.ExamType", "ExamType")
                        .WithMany("Exams")
                        .HasForeignKey("ExamTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("Exams")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Exam", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("SCMR_Api.Model.Teacher", "Teacher")
                        .WithMany("Exams")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Yeareducation", "Yeareducation")
                        .WithMany("Exams")
                        .HasForeignKey("YeareducationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.ExamScore", b =>
                {
                    b.HasOne("SCMR_Api.Model.Exam", "Exam")
                        .WithMany("ExamScores")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithMany("ExamScores")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.Contract", b =>
                {
                    b.HasOne("SCMR_Api.Model.Financial.ContractType", "ContractType")
                        .WithMany("Contracts")
                        .HasForeignKey("ContractTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Financial.StdPayment", b =>
                {
                    b.HasOne("SCMR_Api.Model.Financial.Contract", "Contract")
                        .WithMany("StdPayments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Financial.PaymentType", "PaymentType")
                        .WithMany("StdPayments")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithMany("StudentPayments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Grade", b =>
                {
                    b.HasOne("SCMR_Api.Model.InsTitute", "Titute")
                        .WithMany("Grades")
                        .HasForeignKey("TituteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Yeareducation", "Yeareducation")
                        .WithMany("Grades")
                        .HasForeignKey("YeareducationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.InsTitute", b =>
                {
                    b.HasOne("SCMR_Api.Model.InsTitute", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("TituteCode");
                });

            modelBuilder.Entity("SCMR_Api.Model.Item", b =>
                {
                    b.HasOne("SCMR_Api.Model.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Unit", "Unit")
                        .WithMany("Items")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.ItemAttribute", b =>
                {
                    b.HasOne("SCMR_Api.Model.Attribute", "Attribute")
                        .WithMany("ItemAttribute")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.Item", "Item")
                        .WithMany("ItemAttribute")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SCMR_Api.Model.Log", b =>
                {
                    b.HasOne("SCMR_Api.Model.User", "User")
                        .WithMany("Logs")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SCMR_Api.Model.OrgChart", b =>
                {
                    b.HasOne("SCMR_Api.Model.OrgChart", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("SCMR_Api.Model.OrgPerson", b =>
                {
                    b.HasOne("SCMR_Api.Model.Education", "Education")
                        .WithMany("OrgPeople")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Insurance", "Insurance")
                        .WithMany("OrgPeople")
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.OrgChart", "OrgChart")
                        .WithMany("OrgPeople")
                        .HasForeignKey("OrgChartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Salary", "Salary")
                        .WithMany("OrgPeople")
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Question", b =>
                {
                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany("Questions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("Questions")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.QuestionOption", b =>
                {
                    b.HasOne("SCMR_Api.Model.Question", "Question")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.StdClassMng", b =>
                {
                    b.HasOne("SCMR_Api.Model.Class", "Class")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.Grade", "Grade")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.InsTitute", "InsTitute")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("InsTituteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.Yeareducation", "Yeareducation")
                        .WithMany("StdClassMngs")
                        .HasForeignKey("YeareducationId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SCMR_Api.Model.StudentInfo", b =>
                {
                    b.HasOne("SCMR_Api.Model.Student", "Student")
                        .WithOne("StudentInfo")
                        .HasForeignKey("SCMR_Api.Model.StudentInfo", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.Teacher", b =>
                {
                    b.HasOne("SCMR_Api.Model.OrgPerson", "OrgPerson")
                        .WithMany("Teachers")
                        .HasForeignKey("OrgPersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.TimeSchedule", b =>
                {
                    b.HasOne("SCMR_Api.Model.Course", "Course")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SCMR_Api.Model.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SCMR_Api.Model.Teacher")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("TeacherId1");

                    b.HasOne("SCMR_Api.Model.TimeandDays", "TimeandDays")
                        .WithMany("TimeSchedules")
                        .HasForeignKey("TimeandDaysId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SCMR_Api.Model.User", b =>
                {
                    b.HasOne("SCMR_Api.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
